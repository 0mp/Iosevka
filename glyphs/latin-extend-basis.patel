###### EXTENDED LATIN CHARACTERS
###### BASIS

create-glyph 'AE' : glyph-construction
	set-width WIDTH
	assign-unicode 0xC6
	include capitalMarks
	
	local eleft : MIDDLE - MVERTSTROKE * 0.25
	local turn : XH * 0.1
	
	# A half
	include : dispiro
		widths.rhs MVERTSTROKE
		flat SB 0 [heading UPWARD]
		curl SB (CAP * 0.1) [heading UPWARD]
		quadcontrols 0 0.3 6 unimportant
		g4   (eleft - HALFSTROKE) CAP [widths.rhs (MVERTSTROKE * 0.8)]

	start-from (eleft - HALFSTROKE) CAP
	line-to    eleft CAP
	line-to    eleft (CAP - MVERTSTROKE)
	include : HBarTop  (SB + MVERTSTROKE)  (eleft + MVERTSTROKE / 2) (XH / 2) MVERTSTROKE
	
	# E half
	include : VBarLeft eleft 0 CAP MVERTSTROKE
	include : HBarTop (eleft - O) RIGHTSB CAP
	include : HBar (eleft - O) (RIGHTSB - MVERTSTROKE / 4) (CAP * 0.54)
	include : HBarBottom (eleft - O) RIGHTSB 0

define [OEShape top] : glyph-construction
	local eleft MIDDLE
	
	# O half
	
	include : dispiro
		widths.lhs MVERTSTROKE 0
		straight.left.start eleft top [heading LEFTWARD]
		archv
		flat  SB (top - SMOOTHA)
		curl  SB SMOOTHB
		arcvh
		straight.right.end eleft 0 [heading RIGHTWARD]
	
	# E half
	include : VBarLeft eleft 0 top MVERTSTROKE
	include : HBarTop (eleft - O) RIGHTSB top
	include : HBar (eleft - O) (RIGHTSB - MVERTSTROKE / 4) (top * 0.54)
	include : HBarBottom (eleft - O) RIGHTSB 0

create-glyph 'OE' : glyph-construction
	set-width WIDTH
	assign-unicode 0x152
	include capitalMarks
	include : OEShape CAP


define aeepart : glyph-construction
	local eLeft : MIDDLE - MVERTSTROKE / 2 * CORRECTION_HX + 0.1
	local eMiddle : [mix eLeft (RIGHTSB - OX * 2) 0.5] - MVERTSTROKE * globalTransform.yx
	local barbottom (XH * EBARPOS)
	
	local sma : SMALLSMOOTHA * 0.6
	local smb : SMALLSMOOTHB * 0.6
	include : dispiro
		widths.lhs MVERTSTROKE
		flat (RIGHTSB - OX * 2) barbottom [heading UPWARD]
		curl (RIGHTSB - OX * 2) (XH - smb)
		arcvh
		g4   eMiddle XO
		archv
		flat eLeft (XH - sma)
		curl eLeft smb
		hookend O true MVERTSTROKE
		g4   (RIGHTSB - OX * 2) (AHOOK)
	include : HBarBottom (eLeft + MVERTSTROKE / 2) (RIGHTSB - OX * 2 - MVERTSTROKE / 2) barbottom

define aeapart : glyph-construction
	local bartop (XH * BARPOS * 1.02 + HALFSTROKE)
	local abarRight : MIDDLE + MVERTSTROKE / 2 * CORRECTION_HX - 0.1
	local lowmiddle : mix (SB + OX * 2) abarRight 0.5
	local barsmooth : mix SB abarRight 0.7
	
	local sma : SMALLSMOOTHA * 0.6
	local smb : SMALLSMOOTHB * 0.6

	include : dispiro
		widths.rhs MVERTSTROKE
		g4 (SB + OX) (XH - AHOOK)
		hookstart XO true MVERTSTROKE
		flat abarRight (XH - smb)
		curl abarRight smb
		arcvh
		g4 lowmiddle O [heading LEFTWARD]
		archv
		g4 (SB + OX * 2) [mix 0 bartop 0.45]
		arcvh
		flat barsmooth bartop
		curl (abarRight - 1) bartop [heading RIGHTWARD]

define oeopart : glyph-construction
	local abarRight : MIDDLE + MVERTSTROKE / 2 * CORRECTION_HX
	include : smallo XH 0 (SB + OX) (abarRight + OX) MVERTSTROKE (SMALLSMOOTHA * 0.6) (SMALLSMOOTHB * 0.6)


create-glyph 'ae' : glyph-construction
	set-width WIDTH
	assign-unicode 0xE6
	include eMarks
	include aeepart
	include aeapart

create-glyph 'oe' : glyph-construction
	set-width WIDTH
	assign-unicode 0x153
	include eMarks
	include aeepart
	include oeopart

create-glyph 'db' : glyph-construction
	set-width WIDTH
	assign-unicode 0x238
	include bMarks
	include oeopart
	include : FlipAround MIDDLE (XH / 2)
	include oeopart
	include : VBar MIDDLE (XH / 2) CAP MVERTSTROKE
	if SLAB : begin
		include : LeftwardTopSerif (MIDDLE - MVERTSTROKE / 2 * CORRECTION_HX) CAP SIDEJUT

create-glyph 'qp' : glyph-construction
	set-width WIDTH
	assign-unicode 0x239
	include pMarks
	include oeopart
	include : FlipAround MIDDLE (XH / 2)
	include oeopart
	include : VBar MIDDLE DESCENDER (XH / 2) MVERTSTROKE
	if SLAB : begin
		include : CenterBottomSerif MIDDLE DESCENDER JUT

create-glyph 'OU' : glyph-construction
	assign-unicode 0x222
	include capitalMarks
	include : smallo (CAP * BARPOS + HALFSTROKE) 0 SB RIGHTSB nothing SMOOTHA SMOOTHB
	include : dispiro
		widths.lhs
		flat SB CAP [heading DOWNWARD]
		curl SB (CAP * BARPOS - O - HALFSTROKE + SMOOTHB)
		arcvh
		g4 (MIDDLE + CORRECTION_OMIDS) (CAP * BARPOS - O - HALFSTROKE)
		archv
		flat RIGHTSB (CAP * BARPOS - O - HALFSTROKE + SMOOTHA)
		curl RIGHTSB CAP [heading UPWARD]

create-glyph 'ou' : glyph-construction
	assign-unicode 0x223
	include bMarks
	include : smallo XH 0 SB RIGHTSB
	include : dispiro
		widths.lhs
		flat SB CAP [heading DOWNWARD]
		curl SB (XH - O - STROKE + SMOOTHB)
		arcvh
		g4 (MIDDLE + CORRECTION_OMIDS) (XH - O - STROKE)
		archv
		flat RIGHTSB (XH - O - STROKE + SMOOTHA)
		curl RIGHTSB CAP [heading UPWARD]


create-glyph 'Eth' : glyph-construction
	assign-unicode 0xD0
	
	include glyphs.D AS_BASE
	include : HOverlayBar (SB * 0.3) [mix (SB + STROKE) (RIGHTSB - STROKE) 0.55] (CAP * BARPOS)

alias 'Dcroat' 0x110 'Eth'
alias 'arficanD' 0x189 'Eth'

create-glyph 'eth' : glyph-construction
	set-width WIDTH
	assign-unicode 0xF0
	include bMarks
	
	include : smallo (CAP * 0.6) 0 SB RIGHTSB
	local ymiddlea : (CAP * 0.6 + SMALLSMOOTHA - SMALLSMOOTHB) / 2
	include : dispiro
		widths.lhs
		g4.up.start (RIGHTSB - O) ymiddlea
		quadcontrols 0 0.8
		g4 (SB + STROKE * 1.1) CAP
	
	include : dispiro
		widths.center OVERLAYSTROKE
		flat [mix SB RIGHTSB 0.1] [mix XH CAP (-0.1)]
		curl [mix SB RIGHTSB 0.95] [mix XH CAP 0.3]

create-glyph 'dcroat' : glyph-construction
	assign-unicode 0x111
	
	include glyphs.d AS_BASE
	include : HBar [mix (SB + STROKE) (RIGHTSB - STROKE) 0.5] [mix RIGHTSB WIDTH 0.7] [mix XH CAP 0.45] OVERLAYSTROKE

create-glyph 'Thorn' : glyph-construction
	set-width WIDTH
	assign-unicode 0xDE
	include capitalMarks
	
	local bowlTop (CAP * 0.77)
	local bowlBottom (CAP * 0.23)
	
	local turn : mix bowlTop bowlBottom 0.5
	local turnRadius : (bowlTop - bowlBottom) / 2
	include : dispiro
		widths.rhs
		flat (SB * 1.25 + 1) bowlTop [heading RIGHTWARD]
		curl (RIGHTSB - turnRadius) bowlTop
		g4   (RIGHTSB - O) turn
		flat (RIGHTSB - turnRadius) bowlBottom
		curl (SB * 1.25 + 1) bowlBottom [heading LEFTWARD]
	
	include : VBarLeft (SB * 1.25) 0 CAP
	if SLAB : begin
		include : CenterBottomSerif (SB * 1.25 + HALFSTROKE * CORRECTION_HX) 0 JUT
		include : CenterTopSerif (SB * 1.25 + HALFSTROKE * CORRECTION_HX) CAP JUT

create-glyph 'thorn' : glyph-construction
	assign-unicode 0xFE
	
	include : create-glyph : glyph-construction
		include glyphs.b
		eject-contour 'serifLB'
	include : create-glyph : glyph-construction
		include glyphs.p
		eject-contour 'serifLT'
	include ifMarks


define [EzhShape top bot pleft hookless] : glyph-construction
	local cor : 1.2 * CORRECTION_HX
	local yMidBar : mix bot top 0.6
	local ezhLeft : mix SB RIGHTSB [fallback pleft 0.2]
	local ezhRight : mix SB RIGHTSB 0.925
	include : HBarTop SB ezhRight top
	
	start-from ezhLeft yMidBar
	line-to (ezhLeft + STROKE * cor) (yMidBar - HALFSTROKE)
	line-to (ezhLeft + STROKE * cor) yMidBar
	line-to ezhRight (top - STROKE)
	line-to (ezhRight - STROKE * cor) (top - STROKE)
	reverse-last
	
	include : dispiro
		widths.rhs
		flat ezhLeft yMidBar [heading RIGHTWARD]
		curl MIDDLE yMidBar
		archv
		g4   RIGHTSB [mix yMidBar bot 0.5] [if [not hookless] important [heading DOWNWARD]]
		if hookless {} : list
			hookend bot
			g4 SB (bot + SHOOK)
	
	if SLAB : begin
		include : DownwardLeftSerif SB top VJUT

define [RevEzhShape top bot pleft hookless] : glyph-construction
	local cor : 1.2 * CORRECTION_HX
	local yMidBar : mix bot top 0.6
	local ezhRight : mix RIGHTSB SB [fallback pleft 0.2]
	local ezhLeft : mix RIGHTSB SB 0.925
	include : HBarTop ezhLeft RIGHTSB top
	
	start-from ezhRight yMidBar
	line-to (ezhRight - STROKE * cor) (yMidBar - HALFSTROKE)
	line-to (ezhRight - STROKE * cor) yMidBar
	line-to ezhLeft (top - STROKE)
	line-to (ezhLeft + STROKE * cor) (top - STROKE)
	
	include : dispiro
		widths.lhs
		flat ezhRight yMidBar [heading LEFTWARD]
		curl MIDDLE yMidBar
		archv
		g4   SB [mix yMidBar bot 0.5] [if [not hookless] important [heading DOWNWARD]]
		if hookless {} : list
			hookend bot
			g4 RIGHTSB (bot + SHOOK)
	if SLAB : begin
		include : DownwardRightSerif RIGHTSB top VJUT

create-glyph 'Ezh' : glyph-construction
	set-width WIDTH
	assign-unicode 0x1B7
	include capitalMarks
	include : EzhShape CAP 0

create-glyph 'ezh' : glyph-construction
	set-width WIDTH
	assign-unicode 0x292
	include pMarks
	include : EzhShape XH DESCENDER

create-glyph 'revEzh' : glyph-construction
	assign-unicode 0x1B8
	include capitalMarks
	include : RevEzhShape CAP 0

create-glyph 'revezh' : glyph-construction
	assign-unicode 0x1B9
	include pMarks
	include : RevEzhShape XH DESCENDER

create-glyph 'esh' : glyph-construction
	assign-unicode 0x283
	include glyphs.'longs.italic' AS_BASE


create-glyph 'eszet' : glyph-construction
	set-width WIDTH
	assign-unicode 0xDF
	include ifMarks
	local l : SB * 1
	include : dispiro
		widths.lhs
		g4 (l + HOOKX + HALFSTROKE) CAP [heading LEFTWARD]
		archv
		flat l XH
		curl l 0 [heading DOWNWARD]
	local t : mix 0 CAP 0.7
	local tm : [mix DESCENDER t 0.625] + HALFSTROKE
	local tl : [mix l RIGHTSB 0.35] + HALFSTROKE * CORRECTION_HX
	include : HBarTop (l + 1) (RIGHTSB - HALFSTROKE * 1.2 - O) t
	include : dispiro
		widths.rhs
		flat tl tm [heading RIGHTWARD]
		curl (tl + 1) tm [heading RIGHTWARD]
		g2 (RIGHTSB - O * 1.5) [mix DESCENDER tm 0.70]
		g2 (RIGHTSB - O * 1.5) [mix DESCENDER tm 0.67]
		alsothru 0.5 0.75
		g4 [mix SB RIGHTSB 0.35] DESCENDER
	include : dispiro
		widths.center (STROKE * 1.1)
		corner tl (tm - STROKE) [heading UPWARD]
		corner (RIGHTSB - HALFSTROKE * 1.2 - O) t [heading UPWARD]
	set this.italicHookAttachPoint {.x (l + HALFSTROKE) .y 0}

create-glyph 'Eszet' : glyph-construction
	assign-unicode 0x1E9E
	include capitalMarks
	include : dispiro
		widths.lhs
		g4 (RIGHTSB + O * 2) (CAP - SMOOTHB)
		hookstart (CAP - O)
		flat SB XH
		curl SB 0 [heading DOWNWARD]
	local ymiddle : [mix 0 CAP 0.5] - HALFSTROKE
	include : dispiro
		widths.rhs
		g4   (RIGHTSB - ymiddle / 2 - STROKE * 0.75) (ymiddle + STROKE)
		archv
		g4   (RIGHTSB - O) [mix 0 (ymiddle + STROKE) 0.5]
		arcvh
		flat (RIGHTSB - ymiddle / 2 - HALFSTROKE) 0
		curl (SB + STROKE - O * 3) 0 [heading LEFTWARD]
	include : dispiro
		widths.rhs
		g4 (RIGHTSB + O * 2) (CAP - SMOOTHB)
		g4 (RIGHTSB - ymiddle / 2 - STROKE * 0.75) (ymiddle + STROKE) [widths STROKE 0]
	
alias 'latinkappa' 0x138 'kappa'

create-glyph 'eng' : glyph-construction
	assign-unicode 0x14B
	include pMarks
	include glyphs.n false {'serifRB'}
	include : VerticalHook (RIGHTSB - HALFSTROKE * CORRECTION_HX) 0 (-HOOKX) HOOK

create-glyph 'Eng' : glyph-construction
	assign-unicode 0x14A
	include capitalMarks
	
	include : nShoulder (SB + STROKE) RIGHTSB (STROKE * 0.3) CAP (HOOK + HALFSTROKE + O) SMOOTHA SMOOTHB
	include : VerticalHook (RIGHTSB - HALFSTROKE * CORRECTION_HX) (HOOK + HALFSTROKE + O) [Math.max ((SB - RIGHTSB) / 2 + HALFSTROKE) (-HOOKX)] HOOK
	include : VBar (SB + HALFSTROKE * CORRECTION_HX) 0 CAP

create-glyph 'napostrophe' : glyph-construction
	assign-unicode 0x149
	include glyphs.commaAbove
	apply-transform : Translate (WIDTH + SB - MIDDLE) 0
	include glyphs.n AS_BASE

create-glyph 'IJ' : glyph-construction
	assign-unicode 0x132
	include capitalMarks
	include : create-glyph : glyph-construction
		include glyphs.'I.straight'
		apply-transform : Translate (SB - MIDDLE + HALFSTROKE * CORRECTION_HX) 0
	include : create-glyph : glyph-construction
		include glyphs.'J.shorthook'
		apply-transform : Translate JBALANCE2 0

create-glyph 'ij' : glyph-construction
	assign-unicode 0x133
	include ifMarks
	include : create-glyph : glyph-construction
		include glyphs.'dotlessi.straight' AS_BASE
		include glyphs.dotAbove
		apply-transform : Translate (SB * 1.5 - MIDDLE + HALFSTROKE * CORRECTION_HX) 0
	include : create-glyph : glyph-construction
		include glyphs.'dotlessj.straight' AS_BASE
		include glyphs.dotAbove
		apply-transform : Translate (RIGHTSB - SB * 0.5 - MIDDLE - JBALANCE - HALFSTROKE * CORRECTION_HX) 0

create-glyph 'Hwair' : glyph-construction
	assign-unicode 0x1F6
	include : VBarLeft (SB + O) 0 CAP MVERTSTROKE
	include : HBar SB MIDDLE (CAP / 2)
	include : dispiro
		widths.lhs MVERTSTROKE
		flat (MIDDLE - MVERTSTROKE * 0.5 * CORRECTION_HX) CAP [heading DOWNWARD]
		curl (MIDDLE - MVERTSTROKE * 0.5 * CORRECTION_HX) (SMALLSMOOTHB * 0.6)
		arcvh
		g4 [mix (MIDDLE - MVERTSTROKE * 0.5 * CORRECTION_HX) (RIGHTSB - O) 0.5] O [heading RIGHTWARD]
		archv
		flat (RIGHTSB - O) (SMALLSMOOTHA * 0.6)
		curl (RIGHTSB - O) XH [heading UPWARD]
	if SLAB : begin
		local jut : JUT * 0.75
		include : CenterTopSerif (SB + O + MVERTSTROKE / 2 * CORRECTION_HX) CAP jut
		include : CenterBottomSerif (SB + O + MVERTSTROKE / 2 * CORRECTION_HX) 0 jut
		include : CenterTopSerif MIDDLE CAP jut

create-glyph 'hwair' : glyph-construction
	assign-unicode 0x195
	include : VBarLeft (SB + O) 0 CAP MVERTSTROKE
	include : dispiro
		nShoulderKnots (SB + O + MVERTSTROKE * CORRECTION_HX) (MIDDLE + MVERTSTROKE * 0.5 * CORRECTION_HX) (MVERTSTROKE * 0.4) nothing (XH * 0.51) (SMALLSMOOTHA * 0.6) (SMALLSMOOTHB * 0.6) MVERTSTROKE
		flat (MIDDLE + MVERTSTROKE * 0.5 * CORRECTION_HX) (XH * 0.5) [heading DOWNWARD]
		curl (MIDDLE + MVERTSTROKE * 0.5 * CORRECTION_HX) (SMALLSMOOTHB * 0.6)
		arcvh
		g4 [mix (MIDDLE - MVERTSTROKE * 0.5 * CORRECTION_HX) (RIGHTSB - O) 0.5] O [widths.heading MVERTSTROKE 0 RIGHTWARD]
		archv
		flat (RIGHTSB - O) (SMALLSMOOTHA * 0.6)
		curl (RIGHTSB - O) XH [heading UPWARD]
	if SLAB : begin
		local jut : JUT * 0.75
		include : LeftwardTopSerif (SB + O) CAP (jut - MVERTSTROKE / 2 * CORRECTION_HX)
		if (para.italicangle === 0) : begin
			include : CenterBottomSerif (SB + O + MVERTSTROKE / 2 * CORRECTION_HX) 0 jut
			tag-contour 'serifLB'


create-glyph 'Gha' : glyph-construction
	assign-unicode 0x1A2
	include capitalMarks
	local abarRight : MIDDLE + MVERTSTROKE / 2 * CORRECTION_HX
	include : smallo CAP 0 (SB + O) abarRight MVERTSTROKE (SMALLSMOOTHA * 0.6) (SMALLSMOOTHB * 0.6)
	include : VBarRight (RIGHTSB - O * 2) DESCENDER CAP MVERTSTROKE
	include : dispiro
		widths.lhs MVERTSTROKE
		flat MIDDLE (CAP - SMALLSMOOTHB * 0.6) [heading RIGHTWARD]
		curl (MIDDLE + 1) (CAP - SMALLSMOOTHB * 0.6) [heading RIGHTWARD]
		alsothru 0.5 0.15
		g4   (RIGHTSB - MVERTSTROKE * CORRECTION_HX) CAP [widths 0 MVERTSTROKE]


create-glyph 'gha' : glyph-construction
	assign-unicode 0x1A3
	include pMarks
	local abarRight : MIDDLE + MVERTSTROKE / 2 * CORRECTION_HX
	include : smallo XH 0 (SB + O) abarRight MVERTSTROKE (SMALLSMOOTHA * 0.6) (SMALLSMOOTHB * 0.6)
	include : VBarRight (RIGHTSB - O * 2) DESCENDER XH MVERTSTROKE
	include : dispiro
		widths.lhs MVERTSTROKE
		flat MIDDLE (XH - SMALLSMOOTHB * 0.6) [heading RIGHTWARD]
		curl (MIDDLE + 1) (XH - SMALLSMOOTHB * 0.6) [heading RIGHTWARD]
		alsothru 0.5 0.15
		g4   (RIGHTSB - MVERTSTROKE * CORRECTION_HX) XH [widths 0 MVERTSTROKE]


create-glyph 'looprevesh' : glyph-construction
	assign-unicode 0x1AA
	include ifMarks
	local fine : adviceBlackness 5
	include : dispiro
		widths.center fine
		g4 MIDDLE (CAP - fine * 1.5) [heading DOWNWARD]
		arcvh
		g4 (MIDDLE - fine * 1) (CAP - fine * 2.5) [heading LEFTWARD]
		archv
		g4 (MIDDLE - fine * 2) (CAP - fine * 1.5) [heading UPWARD]
		arcvh
		g4 (MIDDLE - fine * 1) (CAP - fine * 0.5) [heading RIGHTWARD]
		archv
		flat MIDDLE (CAP - fine * 1.5) [widths.heading HALFSTROKE HALFSTROKE DOWNWARD]
		curl MIDDLE 0 [heading DOWNWARD]
		arcvh
		g4 (MIDDLE + HOOKX) (-HOOK) [heading RIGHTWARD]


create-glyph 'scripta' : glyph-construction
	assign-unicode 0x0251
	include eMarks
	include : oRight
	start-from RIGHTSB 0
	line-to    (RIGHTSB - STROKE * CORRECTION_HX) 0
	line-to    (RIGHTSB - STROKE * CORRECTION_HX) (XH - STROKE / 2)
	line-to    RIGHTSB (XH - O)
	if SLAB : begin
		include : RightwardBottomSerif RIGHTSB 0 SIDEJUT
		tag-contour 'serifRB'

create-glyph 'turnSmallE' : glyph-construction
	assign-unicode 0x18F
	include capitalMarks
	include : SmallEShape CAP STROKE
	include : FlipAround MIDDLE (CAP / 2)

create-glyph 'iogonek.dotless' : glyph-construction
	include glyphs.dotlessi AS_BASE
	include glyphs.ogonekBelow

create-glyph 'revS' : glyph-construction
	assign-unicode 0x1A7
	include capitalMarks
	local smooth : adviceSSmooth CAP 1
	include : dispiro
		widths.rhs
		g4   SB (CAP - HOOK)
		hookstart CAPO
		g4   RIGHTSB (CAP - smooth)
		alsothru 0.5 0.5 [widths (ESS / 2) (ESS / 2)]
		g4   SB smooth [widths STROKE 0]
		hookend O
		g4   RIGHTSB HOOK

create-glyph 'revs' : glyph-construction
	assign-unicode 0x1A8
	include eMarks
	include glyphs.'cyrghe.italic'

create-glyph 'latinbe' : glyph-construction
	assign-unicode 0x183
	include glyphs.b AS_BASE
	include : HBarTop (SB - O) [mix SB RIGHTSB 0.9] CAP

create-glyph 'latinDe' : glyph-construction
	assign-unicode 0x18B
	include capitalMarks
	include : RevCyrYeriShape CAP
	include : HBarTop [mix RIGHTSB SB 0.9] (RIGHTSB + O) CAP

create-glyph 'latinde' : glyph-construction
	assign-unicode 0x18C
	include glyphs.d AS_BASE
	include : HBarTop (SB - O) [mix SB RIGHTSB 0.9] CAP

create-glyph 'ZhuangToneSix' : glyph-construction
	assign-unicode 0x184
	include glyphs.cyrYeri AS_BASE
	start-from SB CAP
	line-to    (SB - STROKE) (CAP - STROKE)
	line-to    SB (CAP - STROKE * 2)
	reverse-last

create-glyph 'zhuangtonesix' : glyph-construction
	assign-unicode 0x185
	include glyphs.b AS_BASE
	eject-contour 'serifLT'
	start-from SB CAP
	line-to    (SB - STROKE) (CAP - STROKE)
	line-to    SB (CAP - STROKE * 2)
	reverse-last

create-glyph 'zhuangToneFive' : glyph-construction
	assign-unicode 0x1BC
	include capitalMarks
	include : FiveShape CAP FIVEBARPOS

create-glyph 'zhuangtonefive' : glyph-construction
	assign-unicode 0x1BD
	include eMarks
	include : FiveShape XH FIVEBARPOS

define [WynnShape bot top] : glyph-construction
	include : VBarLeft SB bot top
	include : dispiro
		widths.rhs
		g4 SB [mix bot top 0.8]
		g4 MIDDLE (top - O)
		archv
		g4 (RIGHTSB - O) [mix bot top 0.7]
		g4 (SB + STROKE * CORRECTION_HX) [mix bot top 0.1]

create-glyph 'Wynn' : glyph-construction
	assign-unicode 0x1F7
	include capitalMarks
	include : WynnShape 0 CAP

create-glyph 'wynn' : glyph-construction
	assign-unicode 0x1BF
	include pMarks
	include : WynnShape DESCENDER XH


define [YoghShape top bot] : glyph-construction
	include : dispiro
		widths.rhs
		g4 SB (top - HOOK)
		hookstart top
		g4 RIGHTSB (top - SMOOTHB)
		alsothruthem {{0.5 0.75}} important
		g4 [mix SB RIGHTSB 0.1] [mix bot top 0.4]
	include : dispiro
		widths.rhs
		g4 [mix SB RIGHTSB 0.75] [mix bot (top - SMOOTHB) 0.75] [widths.heading 0 (STROKE * 1.25) DOWNWARD]
		g4 RIGHTSB ([mix bot (top - SMOOTHB) 0.475] + 1) [widths 0 STROKE]
		g4 RIGHTSB ([mix bot (top - SMOOTHB) 0.475] - 1)
		alsothruthem {{0.25 0.6} {0.5 0.81}}
		g4 SB (bot + O)

create-glyph 'Yogh' : glyph-construction
	assign-unicode 0x21C
	include capitalMarks
	include : YoghShape CAP 0

create-glyph 'yogh' : glyph-construction
	assign-unicode 0x21D
	include pMarks
	include : YoghShape XH DESCENDER

# Latinified greek letters
create-glyph 'latinupsilon1' : glyph-construction
	assign-unicode 0x28A
	include eMarks
	include : OmegaShape XH SMALLSMOOTHA SMALLSMOOTHB SMALLSMOOTHA SMALLSMOOTHB
	include : FlipAround MIDDLE (XH / 2)

define [LatinUpsilon2Shape top sma smb] : glyph-construction
	include : dispiro
		widths.lhs
		flat SB top [heading DOWNWARD]
		curl SB smb
		arcvh
		g4 (MIDDLE + CORRECTION_OMIDS) O
		archv
		flat RIGHTSB sma
		curl RIGHTSB (top - HOOK - HALFSTROKE) [heading UPWARD]
	include : VerticalHook (RIGHTSB - HALFSTROKE * CORRECTION_HX) (top - HOOK - HALFSTROKE) (-(RIGHTSB - HALFSTROKE * CORRECTION_HX - MIDDLE)) (-HOOK)

create-glyph 'latinUpsilon2' : glyph-construction
	assign-unicode 0x1B2
	include eMarks
	include : LatinUpsilon2Shape CAP SMOOTHA SMOOTHB

create-glyph 'latinupsilon2' : glyph-construction
	assign-unicode 0x28B
	include eMarks
	include : LatinUpsilon2Shape XH SMALLSMOOTHA SMALLSMOOTHB

alias 'scriptg' 0x261 'g.singlestorey'

define [RamsHornShape bottom top] : glyph-construction
	local hf : [adviceBlackness 4] / 2
	local d : hf * 2 + WIDTH * 0.05

	include : dispiro
		widths.center
		g4 (SB + HALFSTROKE * CORRECTION_HX + O) top [heading DOWNWARD]
		quadcontrols 1 0.7 16
		g4 (MIDDLE + d - hf) (bottom + d * (1 - globalTransform.yx * 0.5)) [widths hf hf]
		arcvh
		g4 (MIDDLE + CORRECTION_OMIDX * hf * 2) (bottom + hf)
		archv
		g4 (MIDDLE - d + hf) (bottom + d * (1 + globalTransform.yx * 0.5))
		quadcontrols 0 0.3 16
		g4 (RIGHTSB - HALFSTROKE * CORRECTION_HX - O) top [widths.heading HALFSTROKE HALFSTROKE UPWARD]

create-glyph 'latingamma' : glyph-construction
	assign-unicode 0x263
	include pMarks
	include : RamsHornShape DESCENDER XH

create-glyph 'latinGamma' : glyph-construction
	assign-unicode 0x194
	include ifMarks
	include : RamsHornShape DESCENDER CAP

create-glyph 'ramshorn' : glyph-construction
	assign-unicode 0x264
	include eMarks
	include : RamsHornShape 0 XH

create-glyph 'latinEpsilon' : glyph-construction
	assign-unicode 0x190
	include capitalMarks
	include : SmallEpsilonShape CAP

create-glyph 'latinIota' : glyph-construction
	assign-unicode 0x196
	include capitalMarks
	include : IotaShape CAP

create-glyph 'closeomega' : glyph-construction
	assign-unicode 0x277
	include eMarks
	local fine : adviceBlackness 3.25
	local x0 : MIDDLE - CORRECTION_OMIDS
	local y0 : XH - O
	local y1 : mix 0 XH 0.45
	local x1 : SB + OX * 2
	local y3 : XH / 2
	local y4 : XH * 0.65
	include : dispiro
		widths.rhs fine
		flat (MIDDLE + fine / 2 * CORRECTION_HX) y4 [heading DOWNWARD]
		curl (MIDDLE + fine / 2 * CORRECTION_HX) y3 [heading DOWNWARD]
		arcvh 8
		g4 [mix x1 (MIDDLE + fine / 2 * CORRECTION_HX) 0.5] O [heading LEFTWARD]
		archv 8
		g4 x1 y1
		arcvh
		g4 x0 y0
		archv
		g4 (WIDTH - x1) y1
		arcvh 8
		g4 [mix (WIDTH - x1) (MIDDLE - fine / 2 * CORRECTION_HX) 0.5] O [heading LEFTWARD]
		archv 8
		flat (MIDDLE - fine / 2 * CORRECTION_HX) y3 [heading UPWARD]
		curl (MIDDLE - fine / 2 * CORRECTION_HX) y4 [heading UPWARD]

create-glyph 'latinEta' : glyph-construction
	assign-unicode 0x220
	include ifMarks
	set-anchor 'lf' BASE (SB + HALFSTROKE) 0
	
	include : nShoulder (SB + STROKE) RIGHTSB (STROKE * 0.3) CAP DESCENDER SMALLSMOOTHA SMALLSMOOTHB
	include : VBar (SB + HALFSTROKE * CORRECTION_HX) 0 CAP
	if SLAB : begin
		include : LeftwardTopSerif SB CAP SIDEJUT
		tag-contour 'serifLT'
		if (para.italicangle > 0)
		: then : include : tagged 'serifRB' : RightwardBottomSerif RIGHTSB DESCENDER SIDEJUT
		: else : include : tagged 'serifRB' : CenterBottomSerif (RIGHTSB - HALFSTROKE * CORRECTION_HX) DESCENDER JUT
		if (para.italicangle === 0) : begin
			include : CenterBottomSerif (SB + HALFSTROKE * CORRECTION_HX) 0 JUT
			tag-contour 'serifLB'
			
create-glyph 'latineta' : glyph-construction
	assign-unicode 0x19E
	include pMarks
	set-anchor 'lf' BASE (SB + HALFSTROKE) 0
	
	include : nShoulder (SB + STROKE * CORRECTION_HX) RIGHTSB (STROKE * 0.3) XH DESCENDER SMALLSMOOTHA SMALLSMOOTHB
	include : VBarLeft SB 0 XH
	if SLAB : begin
		include : LeftwardTopSerif SB XH SIDEJUT
		tag-contour 'serifLT'
		if (para.italicangle > 0)
		: then : include : tagged 'serifRB' : RightwardBottomSerif RIGHTSB DESCENDER SIDEJUT
		: else : include : tagged 'serifRB' : CenterBottomSerif (RIGHTSB - HALFSTROKE * CORRECTION_HX) DESCENDER JUT
		if (para.italicangle === 0) : begin
			include : CenterBottomSerif (SB + HALFSTROKE * CORRECTION_HX) 0 JUT
			tag-contour 'serifLB'

#
create-glyph 'strenchedC' : glyph-construction
	set-width WIDTH
	assign-unicode 0x297
	include pMarks
	include : CShape XH DESCENDER

define [RevSmallEShape top stroke barpos] : glyph-construction
	local barbottom (top * [fallback barpos EBARPOS])
	local hookx SB
	local hookmiddle : [mix (RIGHTSB - O) hookx 0.55] + CORRECTION_OMIDS
	
	include : dispiro
		widths.rhs stroke
		flat (SB + OX) barbottom [heading UPWARD]
		curl (SB + OX) (top - SMALLSMOOTHA)
		arcvh
		g4   MIDDLE (top - O)
		archv
		flat (RIGHTSB - OX) (top - SMALLSMOOTHB)
		curl (RIGHTSB - OX) SMALLSMOOTHA
		hookend O
		g4 (SB + O) AHOOK
	include : HBarBottom (SB + (stroke / 2)) (RIGHTSB - (stroke / 2)) barbottom stroke

create-glyph 'reve' : glyph-construction
	assign-unicode 0x258
	include eMarks
	include : RevSmallEShape XH STROKE


create-glyph 'Yr' : glyph-construction
	assign-unicode 0x1A6
	include ifMarks
	local top : CAP * 0.85
	local bp 0.45
	include : PShape top 1 bp
	include : VBarLeft SB (top - 1) CAP
	
	local TURN (XH * 0.1)
	local right (RIGHTSB - O)
	include : dispiro
		widths.center
		g4.up.start (right - HALFSTROKE) 0 [heading UPWARD]
		quadcontrols 0 0.4 8
		g4 MIDDLE ((top - STROKE) * bp)


# Glottalstop
create-glyph 'glottalstop' : glyph-construction
	assign-unicode 0x294
	include bMarks
	include : dispiro
		widths.rhs
		g4 SB (CAP - HOOK)
		hookstart CAPO
		g4 RIGHTSB (CAP - [adviceGlottalStopSmooth CAP 1])
		alsothru 0.5 0.45 [widths (ESS / 2) (ESS / 2)]
		flat (MIDDLE - HALFSTROKE * CORRECTION_HX) (XH * 0.3) [widths STROKE 0]
		curl (MIDDLE - HALFSTROKE * CORRECTION_HX) 0 [heading DOWNWARD]
	if SLAB : begin
		include : CenterBottomSerif MIDDLE 0 JUT

create-glyph 'revglottalstop' : glyph-construction
	assign-unicode 0x295
	include bMarks
	include : dispiro
		widths.lhs
		g4 RIGHTSB (CAP - HOOK)
		hookstart CAPO
		g4 SB (CAP - [adviceGlottalStopSmooth CAP (-1)])
		alsothru 0.5 0.45 [widths (ESS / 2) (ESS / 2)]
		flat (MIDDLE + HALFSTROKE * CORRECTION_HX) (XH * 0.3) [widths 0 STROKE]
		curl (MIDDLE + HALFSTROKE * CORRECTION_HX) 0 [heading DOWNWARD]
	if SLAB : begin
		include : CenterBottomSerif MIDDLE 0 JUT

create-glyph 'smallglottalstop' : glyph-construction
	assign-unicode 0x242
	include bMarks
	include : dispiro
		widths.rhs
		g4 SB (XH - HOOK)
		hookstart XO
		g4 RIGHTSB (XH - [adviceGlottalStopSmooth XH 1])
		alsothru 0.5 0.45 [widths (ESS / 2) (ESS / 2)]
		flat (MIDDLE - HALFSTROKE * CORRECTION_HX) (XH * 0.15) [widths STROKE 0]
		curl (MIDDLE - HALFSTROKE * CORRECTION_HX) 0 [heading DOWNWARD]
	if SLAB : begin
		include : CenterBottomSerif MIDDLE 0 JUT

create-glyph 'invglottalstopbar' : glyph-construction
	assign-unicode 0x1BE
	include eMarks
	include : dispiro
		widths.lhs
		g4 RIGHTSB (XH - HOOK)
		hookstart XO
		g4 SB (XH - [adviceGlottalStopSmooth XH 1])
		alsothru 0.5 0.45 [widths (ESS / 2) (ESS / 2)]
		flat (MIDDLE + HALFSTROKE * CORRECTION_HX) (XH * 0.15) [widths 0 STROKE]
		curl (MIDDLE + HALFSTROKE * CORRECTION_HX) 0 [heading DOWNWARD]
	include : HOverlayBar (MIDDLE - LONGJUT * 0.6) (MIDDLE + LONGJUT * 0.6) (XH * 0.25)
	include : FlipAround MIDDLE (XH / 2)

create-glyph 'fineglottalstop' : glyph-construction
	include bMarks
	local fine : markHalfStroke * 2
	include : dispiro
		widths.rhs fine
		g4 SB (CAP - HOOK)
		hookstart CAPO
		g4 RIGHTSB (CAP - [adviceGlottalStopSmooth CAP 1])
		alsothru 0.5 0.45 [widths markHalfStroke markHalfStroke]
		flat (MIDDLE - fine / 2 * CORRECTION_HX) (XH * 0.3) [widths fine 0]
		curl (MIDDLE - fine / 2 * CORRECTION_HX) 0 [heading DOWNWARD]
	if SLAB : begin
		include : CenterBottomSerif MIDDLE 0 JUT fine

create-glyph 'finerevglottalstop' : glyph-construction
	include bMarks
	local fine : markHalfStroke * 2
	include : dispiro
		widths.lhs fine
		g4 RIGHTSB (CAP - HOOK)
		hookstart CAPO
		g4 SB (CAP - [adviceGlottalStopSmooth CAP (-1)])
		alsothru 0.5 0.45 [widths markHalfStroke markHalfStroke]
		flat (MIDDLE + fine / 2 * CORRECTION_HX) (XH * 0.3) [widths 0 fine]
		curl (MIDDLE + fine / 2 * CORRECTION_HX) 0 [heading DOWNWARD]
	if SLAB : begin
		include : CenterBottomSerif MIDDLE 0 JUT fine

# Clicks
create-glyph 'palatoalveolarclick' : glyph-construction
	assign-unicode 0x1C2
	include glyphs.bar AS_BASE
	include glyphs.equal

# Flap & fishhook & viby
create-glyph 'rflap' : glyph-construction
	assign-unicode 0x27E
	include eMarks
	local rhookx : RIGHTSB + JBALANCE / 2
	local rmiddle : [mix (SB + RBALANCE + STROKE) (rhookx - HALFSTROKE) 0.5] - CORRECTION_OMIDS

	include : dispiro
		widths.lhs
		g4   rhookx (XH - RHOOK)
		hookstart XO
		flat (SB + RBALANCE) (XH - SMALLSMOOTHA)
		curl (SB + RBALANCE) 0 [heading DOWNWARD]
	if SLAB : begin
		include : CenterBottomSerif (SB + RBALANCE + STROKE * 0.75 * CORRECTION_HX) 0 (JUT + HALFSTROKE / 2)
		tag-contour 'serifLB'

create-glyph 'ifishhook' : glyph-construction
	assign-unicode 0x27F
	include pMarks
	include : VBar MIDDLE DESCENDER (XH - HOOK)
	include : VerticalHook MIDDLE (XH - HOOK) (-LONGJUT + LBALANCE) (-HOOK + HALFSTROKE)
	apply-transform : Translate LBALANCE 0
	if SLAB : begin
		include : CenterBottomSerif MIDDLE DESCENDER JUT

create-glyph 'iviby' : glyph-construction
	assign-unicode 0x285
	include pMarks
	include : VBar MIDDLE 0 (XH - HOOK - HALFSTROKE)
	include : VerticalHook MIDDLE (XH - HOOK - HALFSTROKE) (-LONGJUT) (-HOOK)
	include : VerticalHook MIDDLE 0 LONGJUT HOOK

# SMCPs
create-glyph 'smcpR' : glyph-construction
	assign-unicode 0x280
	include eMarks
	include : RShape XH

create-glyph 'smcpG' : glyph-construction
	assign-unicode 0x262
	include eMarks
	include : GShape XH SMOOTHA SMOOTHB

create-glyph 'smcpL' : glyph-construction
	assign-unicode 0x29F
	include eMarks
	include : LShape XH

create-glyph 'smcpN' : glyph-construction
	assign-unicode 0x274
	include eMarks
	include : NShape XH SB RIGHTSB 3 3.5

create-glyph 'smcpI' : glyph-construction
	assign-unicode 0x26A
	include eMarks
	include : ISerifShape XH

create-glyph 'smcpturnE' : glyph-construction
	assign-unicode 0x2C7B
	include eMarks
	include : EShape XH
	include : FlipAround MIDDLE (XH / 2)

create-glyph 'smcpOE' : glyph-construction
	assign-unicode 0x276
	include eMarks
	include : OEShape XH

create-glyph 'smcpY' : glyph-construction
	assign-unicode 0x28F
	include eMarks
	include : YShape XH

create-glyph 'smcpU' : glyph-construction
	assign-unicode 0x1D1CF
	include eMarks
	include : UShape XH 0

# Others
create-glyph 'turnf' : glyph-construction
	assign-unicode 0x25F
	include glyphs.f
	include : FlipAround MIDDLE (XH / 2)
	include pMarks

create-glyph 'lyogh' : glyph-construction
	assign-unicode 0x26E
	include ifMarks
	include : EzhShape XH DESCENDER 0.4
	include : VBarLeft SB (XH * 0.1) CAP

# Aliases
alias 'latinLambda' 0x245 'Lambda'
alias 'latindelta' 0x1E9F 'delta'
alias 'latinepsilon' 0x25B 'epsilon'
alias 'closeturnepsilon' 0x25E 'cyrve.italic'
alias 'smcpB' 0x299 'cyrve.upright'
alias 'latinphi' 0x278 'cyref'
alias 'bulleye' 0x298 'zero.dotted'
alias 'dentalclick' 0x1C0 'bar'
dual 'alveolarlateralclick' 0x1C1 'bar' (WIDTH * 0.35)
alias 'alveolarclick' 0x1C3 'exclam'
alias 'smcpH' 0x29C 'cyren'
alias 'latiniota' 0x269 'iota'
alias 'revlatinepsilon' 0x25C 'cyrze'
alias 'lstinSigma' 0x1A9 'Sigma'
alias 'capglottalstop' 0x241 'glottalstop'
alias 'latinBe' 0x182 'cyrBe'
# Turned glyphs
turned nothing 0x2C6F 'A' MIDDLE (CAP / 2)
turned 'turna' 0x250 'a.upright' MIDDLE (XH / 2)
turned nothing 0x252 'scripta' MIDDLE (XH / 2)
turned nothing 0x186 'C' MIDDLE (CAP / 2)
turned nothing 0x254 'c' MIDDLE (XH / 2)
turned nothing 0x18E 'E' MIDDLE (CAP / 2)
turned nothing 0x1DD 'e' MIDDLE (XH / 2)
turned 'schwa' 0x259 'e' MIDDLE (XH / 2)
turned nothing 0x1D77 'g' MIDDLE [mix DESCENDER XH 0.5]
turned nothing 0x265 'h' MIDDLE (XH / 2) pMarks
turned nothing 0xA7B0 'K' MIDDLE (CAP / 2)
turned nothing 0x29E 'k' MIDDLE (XH / 2) pMarks
turned nothing 0x26F 'm' MIDDLE (XH / 2)
turned nothing 0x279 'r' MIDDLE (XH / 2) [anchorDeriv eMarks {.anchors {.bottomright {.type BASE .x RIGHTSB - RBALANCE .y 0}}}]
turned 'invsmcpR' 0x281 'cyrya' MIDDLE (XH / 2)
turned nothing 0x287 't' MIDDLE (XH / 2) pMarks
turned nothing 0x28C 'v' MIDDLE (XH / 2)
turned nothing 0x28D 'w' MIDDLE (XH / 2)
turned nothing 0x28E 'y' MIDDLE (XH / 2) bMarks
turned nothing 0x1D02 'ae' MIDDLE (XH / 2)
turned nothing 0x1D09 'i' MIDDLE (XH / 2) pMarks
turned 'turndelta' 0x18D 'delta' MIDDLE (XH / 2) pMarks
turned 'latinUpsilon1' 0x1B1 'Omega' MIDDLE (CAP / 2)
turned 'closeepsilon' 0x29A 'closeturnepsilon' MIDDLE (XH / 2)
turned 'invglottalstop' 0x296 'revglottalstop' MIDDLE (CAP / 2)
create-glyph 'capitalTurnm' : glyph-construction
	assign-unicode 0x19C
	include capitalMarks
	include : SmallMShape CAP 0
	include : FlipAround MIDDLE (CAP / 2)