###### EXTENDED LATIN CHARACTERS
###### BASIS

create-glyph 'AE' : glyph-construction
	set-width WIDTH
	assign-unicode 0xC6
	include capitalMarks
	
	local eleft : MIDDLE - MVERTSTROKE * 0.25
	local turn : XH * 0.1
	
	# A half
	include : dispiro
		widths.rhs MVERTSTROKE
		flat SB 0 [heading UPWARD]
		curl SB (CAP * 0.1) [heading UPWARD]
		quadcontrols 0 0.3 6 unimportant
		g4   (eleft - HALFSTROKE) CAP [widths.rhs (MVERTSTROKE * 0.8)]

	start-from (eleft - HALFSTROKE) CAP
	line-to    eleft CAP
	line-to    eleft (CAP - MVERTSTROKE)
	include : HBarTop  (SB + MVERTSTROKE)  (eleft + MVERTSTROKE / 2) (XH / 2) MVERTSTROKE
	
	# E half
	include : VBarLeft eleft 0 CAP MVERTSTROKE
	include : HBarTop (eleft - O) RIGHTSB CAP
	include : HBar (eleft - O) (RIGHTSB - MVERTSTROKE / 4) (CAP * 0.54)
	include : HBarBottom (eleft - O) RIGHTSB 0

define [OEShape top] : glyph-construction
	local eleft MIDDLE
	
	# O half
	
	include : dispiro
		widths.lhs MVERTSTROKE 0
		straight.left.start eleft top [heading LEFTWARD]
		archv
		flat  SB (top - SMOOTHA)
		curl  SB SMOOTHB
		arcvh
		straight.right.end eleft 0 [heading RIGHTWARD]
	
	# E half
	include : VBarLeft eleft 0 top MVERTSTROKE
	include : HBarTop (eleft - O) RIGHTSB top
	include : HBar (eleft - O) (RIGHTSB - MVERTSTROKE / 4) (top * 0.54)
	include : HBarBottom (eleft - O) RIGHTSB 0

create-glyph 'OE' : glyph-construction
	set-width WIDTH
	assign-unicode 0x152
	include capitalMarks
	include : OEShape CAP


define aeepart : glyph-construction
	local eLeft : MIDDLE - MVERTSTROKE / 2 * CORRECTION_HX + 0.1
	local eMiddle : [mix eLeft (RIGHTSB - OX * 2) 0.5] - MVERTSTROKE * globalTransform.yx
	local barbottom (XH * EBARPOS)
	
	local sma : SMALLSMOOTHA * 0.6
	local smb : SMALLSMOOTHB * 0.6
	include : dispiro
		widths.lhs MVERTSTROKE
		flat (RIGHTSB - OX * 2) barbottom [heading UPWARD]
		curl (RIGHTSB - OX * 2) (XH - smb)
		arcvh
		g4   eMiddle XO
		archv
		flat eLeft (XH - sma)
		curl eLeft smb
		hookend O true MVERTSTROKE
		g4   (RIGHTSB - OX * 2) (AHOOK)
	include : HBarBottom (eLeft + MVERTSTROKE / 2) (RIGHTSB - OX * 2 - MVERTSTROKE / 2) barbottom

define aeapart : glyph-construction
	local bartop (XH * BARPOS * 1.02 + HALFSTROKE)
	local abarRight : MIDDLE + MVERTSTROKE / 2 * CORRECTION_HX - 0.1
	local lowmiddle : mix (SB + OX * 2) abarRight 0.5
	local barsmooth : mix SB abarRight 0.7
	
	local sma : SMALLSMOOTHA * 0.6
	local smb : SMALLSMOOTHB * 0.6

	include : dispiro
		widths.rhs MVERTSTROKE
		g4 (SB + OX) (XH - AHOOK)
		hookstart XO true MVERTSTROKE
		flat abarRight (XH - smb)
		curl abarRight smb
		arcvh
		g4 lowmiddle O [heading LEFTWARD]
		archv
		g4 (SB + OX * 2) [mix 0 bartop 0.45]
		arcvh
		flat barsmooth bartop
		curl (abarRight - 1) bartop [heading RIGHTWARD]

define oeopart : glyph-construction
	local abarRight : MIDDLE + MVERTSTROKE / 2 * CORRECTION_HX
	include : OShape XH 0 (SB + OX) (abarRight + OX) MVERTSTROKE (SMALLSMOOTHA * 0.6) (SMALLSMOOTHB * 0.6)


create-glyph 'ae' : glyph-construction
	set-width WIDTH
	assign-unicode 0xE6
	include eMarks
	include aeepart
	include aeapart

create-glyph 'oe' : glyph-construction
	set-width WIDTH
	assign-unicode 0x153
	include eMarks
	include aeepart
	include oeopart

create-glyph 'db' : glyph-construction
	set-width WIDTH
	assign-unicode 0x238
	include bMarks
	include oeopart
	include : FlipAround MIDDLE (XH / 2)
	include oeopart
	include : VBar MIDDLE (XH / 2) CAP MVERTSTROKE
	if SLAB : begin
		include : LeftwardTopSerif (MIDDLE - MVERTSTROKE / 2 * CORRECTION_HX) CAP SIDEJUT

create-glyph 'qp' : glyph-construction
	set-width WIDTH
	assign-unicode 0x239
	include pMarks
	include oeopart
	include : FlipAround MIDDLE (XH / 2)
	include oeopart
	include : VBar MIDDLE DESCENDER (XH / 2) MVERTSTROKE
	if SLAB : begin
		include : CenterBottomSerif MIDDLE DESCENDER JUT

create-glyph 'OU' : glyph-construction
	assign-unicode 0x222
	include capitalMarks
	include : OShape (CAP * BARPOS + HALFSTROKE) 0 SB RIGHTSB nothing SMOOTHA SMOOTHB
	include : dispiro
		widths.lhs
		flat SB CAP [heading DOWNWARD]
		curl SB (CAP * BARPOS - O - HALFSTROKE + SMOOTHB)
		arcvh
		g4 (MIDDLE + CORRECTION_OMIDS) (CAP * BARPOS - O - HALFSTROKE)
		archv
		flat RIGHTSB (CAP * BARPOS - O - HALFSTROKE + SMOOTHA)
		curl RIGHTSB CAP [heading UPWARD]

create-glyph 'ou' : glyph-construction
	assign-unicode 0x223
	include bMarks
	include : OShape XH 0 SB RIGHTSB
	include : dispiro
		widths.lhs
		flat SB CAP [heading DOWNWARD]
		curl SB (XH - O - STROKE + SMOOTHB)
		arcvh
		g4 (MIDDLE + CORRECTION_OMIDS) (XH - O - STROKE)
		archv
		flat RIGHTSB (XH - O - STROKE + SMOOTHA)
		curl RIGHTSB CAP [heading UPWARD]


create-glyph 'eth' : glyph-construction
	set-width WIDTH
	assign-unicode 0xF0
	include bMarks
	
	include : OShape (CAP * 0.6) 0 SB RIGHTSB
	local ymiddlea : (CAP * 0.6 + SMALLSMOOTHA - SMALLSMOOTHB) / 2
	include : dispiro
		widths.lhs
		g4.up.start (RIGHTSB - O) ymiddlea
		quadcontrols 0 0.8
		g4 (SB + STROKE * 1.1) CAP
	
	include : dispiro
		widths.center OVERLAYSTROKE
		flat [mix SB RIGHTSB 0.1] [mix XH CAP (-0.1)]
		curl [mix SB RIGHTSB 0.95] [mix XH CAP 0.3]

create-glyph 'Thorn' : glyph-construction
	set-width WIDTH
	assign-unicode 0xDE
	include capitalMarks
	
	local bowlTop (CAP * 0.77)
	local bowlBottom (CAP * 0.23)
	
	local turn : mix bowlTop bowlBottom 0.5
	local turnRadius : (bowlTop - bowlBottom) / 2
	include : dispiro
		widths.rhs
		flat (SB * 1.25 + 1) bowlTop [heading RIGHTWARD]
		curl (RIGHTSB - turnRadius) bowlTop
		g4   (RIGHTSB - O) turn
		flat (RIGHTSB - turnRadius) bowlBottom
		curl (SB * 1.25 + 1) bowlBottom [heading LEFTWARD]
	
	include : VBarLeft (SB * 1.25) 0 CAP
	if SLAB : begin
		include : CenterBottomSerif (SB * 1.25 + HALFSTROKE * CORRECTION_HX) 0 JUT
		include : CenterTopSerif (SB * 1.25 + HALFSTROKE * CORRECTION_HX) CAP JUT

create-glyph 'thorn' : glyph-construction
	assign-unicode 0xFE
	
	include : create-glyph : glyph-construction
		include glyphs.b
		eject-contour 'serifLB'
	include : create-glyph : glyph-construction
		include glyphs.p
		eject-contour 'serifLT'
	include ifMarks


define [EzhShape top bot pleft hookless] : glyph-construction
	local cor : 1.2 * CORRECTION_HX
	local yMidBar : mix bot top 0.6
	local ezhLeft : mix SB RIGHTSB [fallback pleft 0.2]
	local ezhRight : mix SB RIGHTSB 0.925
	include : HBarTop SB ezhRight top
	
	start-from ezhLeft yMidBar
	line-to (ezhLeft + STROKE * cor) (yMidBar - HALFSTROKE)
	line-to (ezhLeft + STROKE * cor) yMidBar
	line-to ezhRight (top - STROKE)
	line-to (ezhRight - STROKE * cor) (top - STROKE)
	reverse-last
	
	include : dispiro
		widths.rhs
		flat ezhLeft yMidBar [heading RIGHTWARD]
		curl MIDDLE yMidBar
		archv
		g4   RIGHTSB [mix yMidBar bot 0.5] [if [not hookless] important [heading DOWNWARD]]
		if hookless {} : list
			hookend bot
			g4 SB (bot + SHOOK)
	
	if SLAB : begin
		include : DownwardLeftSerif SB top VJUT

define [RevEzhShape top bot pleft hookless] : glyph-construction
	local cor : 1.2 * CORRECTION_HX
	local yMidBar : mix bot top 0.6
	local ezhRight : mix RIGHTSB SB [fallback pleft 0.2]
	local ezhLeft : mix RIGHTSB SB 0.925
	include : HBarTop ezhLeft RIGHTSB top
	
	start-from ezhRight yMidBar
	line-to (ezhRight - STROKE * cor) (yMidBar - HALFSTROKE)
	line-to (ezhRight - STROKE * cor) yMidBar
	line-to ezhLeft (top - STROKE)
	line-to (ezhLeft + STROKE * cor) (top - STROKE)
	
	include : dispiro
		widths.lhs
		flat ezhRight yMidBar [heading LEFTWARD]
		curl MIDDLE yMidBar
		archv
		g4   SB [mix yMidBar bot 0.5] [if [not hookless] important [heading DOWNWARD]]
		if hookless {} : list
			hookend bot
			g4 RIGHTSB (bot + SHOOK)
	if SLAB : begin
		include : DownwardRightSerif RIGHTSB top VJUT

create-glyph 'Ezh' : glyph-construction
	set-width WIDTH
	assign-unicode 0x1B7
	include capitalMarks
	include : EzhShape CAP 0

create-glyph 'ezh' : glyph-construction
	set-width WIDTH
	assign-unicode 0x292
	include pMarks
	include : EzhShape XH DESCENDER

create-glyph 'revEzh' : glyph-construction
	assign-unicode 0x1B8
	include capitalMarks
	include : RevEzhShape CAP 0

create-glyph 'revezh' : glyph-construction
	assign-unicode 0x1B9
	include pMarks
	include : RevEzhShape XH DESCENDER


create-glyph 'eszet' : glyph-construction
	set-width WIDTH
	assign-unicode 0xDF
	include ifMarks
	local l : SB * 1
	include : dispiro
		widths.lhs
		g4 (l + HOOKX + HALFSTROKE) CAP [heading LEFTWARD]
		archv
		flat l XH
		curl l 0 [heading DOWNWARD]
	local t : mix 0 CAP 0.7
	local tm : [mix DESCENDER t 0.625] + HALFSTROKE
	local tl : [mix l RIGHTSB 0.35] + HALFSTROKE * CORRECTION_HX
	include : HBarTop (l + 1) (RIGHTSB - HALFSTROKE * 1.2 - O) t
	include : dispiro
		widths.rhs
		flat tl tm [heading RIGHTWARD]
		curl (tl + 1) tm [heading RIGHTWARD]
		g2 (RIGHTSB - O * 1.5) [mix DESCENDER tm 0.70]
		g2 (RIGHTSB - O * 1.5) [mix DESCENDER tm 0.67]
		alsothru 0.5 0.75
		g4 [mix SB RIGHTSB 0.35] DESCENDER
	include : dispiro
		widths.center (STROKE * 1.1)
		corner tl (tm - STROKE) [heading UPWARD]
		corner (RIGHTSB - HALFSTROKE * 1.2 - O) t [heading UPWARD]
	set this.italicHookAttachPoint {.x (l + HALFSTROKE) .y 0}

create-glyph 'Eszet' : glyph-construction
	assign-unicode 0x1E9E
	include capitalMarks
	include : dispiro
		widths.lhs
		g4 (RIGHTSB + O * 2) (CAP - SMOOTHB)
		hookstart (CAP - O)
		flat SB XH
		curl SB 0 [heading DOWNWARD]
	local ymiddle : [mix 0 CAP 0.5] - HALFSTROKE
	include : dispiro
		widths.rhs
		g4   (RIGHTSB - ymiddle / 2 - STROKE * 0.75) (ymiddle + STROKE)
		archv
		g4   (RIGHTSB - O) [mix 0 (ymiddle + STROKE) 0.5]
		arcvh
		flat (RIGHTSB - ymiddle / 2 - HALFSTROKE) 0
		curl (SB + STROKE - O * 3) 0 [heading LEFTWARD]
	include : dispiro
		widths.rhs
		g4 (RIGHTSB + O * 2) (CAP - SMOOTHB)
		g4 (RIGHTSB - ymiddle / 2 - STROKE * 0.75) (ymiddle + STROKE) [widths STROKE 0]
	
create-glyph 'IJ' : glyph-construction
	assign-unicode 0x132
	include capitalMarks
	include : create-glyph : glyph-construction
		include glyphs.'I.straight'
		apply-transform : Translate (SB - MIDDLE + HALFSTROKE * CORRECTION_HX) 0
	include : create-glyph : glyph-construction
		include glyphs.'J.shorthook'
		apply-transform : Translate JBALANCE2 0

create-glyph 'ij' : glyph-construction
	assign-unicode 0x133
	include ifMarks
	include : create-glyph : glyph-construction
		include glyphs.'dotlessi.straight' AS_BASE
		include glyphs.dotAbove
		apply-transform : Translate (SB * 1.5 - MIDDLE + HALFSTROKE * CORRECTION_HX) 0
	include : create-glyph : glyph-construction
		include glyphs.'dotlessj.straight' AS_BASE
		include glyphs.dotAbove
		apply-transform : Translate (RIGHTSB - SB * 0.5 - MIDDLE - JBALANCE - HALFSTROKE * CORRECTION_HX) 0

create-glyph 'Hwair' : glyph-construction
	assign-unicode 0x1F6
	include : VBarLeft (SB + O) 0 CAP MVERTSTROKE
	include : HBar SB MIDDLE (CAP / 2)
	include : dispiro
		widths.lhs MVERTSTROKE
		flat (MIDDLE - MVERTSTROKE * 0.5 * CORRECTION_HX) CAP [heading DOWNWARD]
		curl (MIDDLE - MVERTSTROKE * 0.5 * CORRECTION_HX) (SMALLSMOOTHB * 0.6)
		arcvh
		g4 [mix (MIDDLE - MVERTSTROKE * 0.5 * CORRECTION_HX) (RIGHTSB - O) 0.5] O [heading RIGHTWARD]
		archv
		flat (RIGHTSB - O) (SMALLSMOOTHA * 0.6)
		curl (RIGHTSB - O) XH [heading UPWARD]
	if SLAB : begin
		local jut : JUT * 0.75
		include : CenterTopSerif (SB + O + MVERTSTROKE / 2 * CORRECTION_HX) CAP jut
		include : CenterBottomSerif (SB + O + MVERTSTROKE / 2 * CORRECTION_HX) 0 jut
		include : CenterTopSerif MIDDLE CAP jut

create-glyph 'hwair' : glyph-construction
	assign-unicode 0x195
	include : VBarLeft (SB + O) 0 CAP MVERTSTROKE
	include : dispiro
		nShoulderKnots (SB + O + MVERTSTROKE * CORRECTION_HX) (MIDDLE + MVERTSTROKE * 0.5 * CORRECTION_HX) (MVERTSTROKE * 0.4) nothing (XH * 0.51) (SMALLSMOOTHA * 0.6) (SMALLSMOOTHB * 0.6) MVERTSTROKE
		flat (MIDDLE + MVERTSTROKE * 0.5 * CORRECTION_HX) (XH * 0.5) [heading DOWNWARD]
		curl (MIDDLE + MVERTSTROKE * 0.5 * CORRECTION_HX) (SMALLSMOOTHB * 0.6)
		arcvh
		g4 [mix (MIDDLE - MVERTSTROKE * 0.5 * CORRECTION_HX) (RIGHTSB - O) 0.5] O [widths.heading MVERTSTROKE 0 RIGHTWARD]
		archv
		flat (RIGHTSB - O) (SMALLSMOOTHA * 0.6)
		curl (RIGHTSB - O) XH [heading UPWARD]
	if SLAB : begin
		local jut : JUT * 0.75
		include : LeftwardTopSerif (SB + O) CAP (jut - MVERTSTROKE / 2 * CORRECTION_HX)
		if (para.italicangle === 0) : begin
			include : CenterBottomSerif (SB + O + MVERTSTROKE / 2 * CORRECTION_HX) 0 jut
			tag-contour 'serifLB'


create-glyph 'Gha' : glyph-construction
	assign-unicode 0x1A2
	include capitalMarks
	local abarRight : MIDDLE + MVERTSTROKE / 2 * CORRECTION_HX
	include : OShape CAP 0 (SB + O) abarRight MVERTSTROKE (SMALLSMOOTHA * 0.6) (SMALLSMOOTHB * 0.6)
	include : VBarRight (RIGHTSB - O * 2) DESCENDER CAP MVERTSTROKE
	include : dispiro
		widths.lhs MVERTSTROKE
		flat MIDDLE (CAP - SMALLSMOOTHB * 0.6) [heading RIGHTWARD]
		curl (MIDDLE + 1) (CAP - SMALLSMOOTHB * 0.6) [heading RIGHTWARD]
		alsothru 0.5 0.15
		g4   (RIGHTSB - MVERTSTROKE * CORRECTION_HX) CAP [widths 0 MVERTSTROKE]


create-glyph 'gha' : glyph-construction
	assign-unicode 0x1A3
	include pMarks
	local abarRight : MIDDLE + MVERTSTROKE / 2 * CORRECTION_HX
	include : OShape XH 0 (SB + O) abarRight MVERTSTROKE (SMALLSMOOTHA * 0.6) (SMALLSMOOTHB * 0.6)
	include : VBarRight (RIGHTSB - O * 2) DESCENDER XH MVERTSTROKE
	include : dispiro
		widths.lhs MVERTSTROKE
		flat MIDDLE (XH - SMALLSMOOTHB * 0.6) [heading RIGHTWARD]
		curl (MIDDLE + 1) (XH - SMALLSMOOTHB * 0.6) [heading RIGHTWARD]
		alsothru 0.5 0.15
		g4   (RIGHTSB - MVERTSTROKE * CORRECTION_HX) XH [widths 0 MVERTSTROKE]


create-glyph 'iogonek.dotless' : glyph-construction
	include glyphs.dotlessi AS_BASE
	include glyphs.ogonekBelow

create-glyph 'latinbe' : glyph-construction
	assign-unicode 0x183
	include glyphs.b AS_BASE
	include : HBarTop (SB - O) [mix SB RIGHTSB 0.9] CAP
	if SLAB : begin
		include : DownwardRightSerif [mix SB RIGHTSB 0.9] CAP VJUT

create-glyph 'latinDe' : glyph-construction
	assign-unicode 0x18B
	include capitalMarks
	include : RevCyrYeriShape CAP
	include : HBarTop [mix RIGHTSB SB 0.9] (RIGHTSB + O) CAP
	if SLAB : begin
		include : DownwardLeftSerif [mix RIGHTSB SB 0.9] CAP VJUT

create-glyph 'latinde' : glyph-construction
	assign-unicode 0x18C
	include glyphs.d AS_BASE
	include : HBarTop [mix RIGHTSB SB 0.9] (RIGHTSB + O) CAP
	if SLAB : begin
		include : DownwardLeftSerif [mix RIGHTSB SB 0.9] CAP VJUT

create-glyph 'ZhuangToneSix' : glyph-construction
	assign-unicode 0x184
	include glyphs.cyrYeri AS_BASE
	eject-contour 'serifYeriLT'
	start-from SB CAP
	line-to    (SB - STROKE) (CAP - STROKE)
	line-to    SB (CAP - STROKE * 2)
	reverse-last

create-glyph 'zhuangtonesix' : glyph-construction
	assign-unicode 0x185
	include glyphs.b AS_BASE
	eject-contour 'serifLT'
	start-from SB CAP
	line-to    (SB - STROKE) (CAP - STROKE)
	line-to    SB (CAP - STROKE * 2)
	reverse-last

create-glyph 'zhuangToneFive' : glyph-construction
	assign-unicode 0x1BC
	include capitalMarks
	include : FiveShape CAP FIVEBARPOS

create-glyph 'zhuangtonefive' : glyph-construction
	assign-unicode 0x1BD
	include eMarks
	include : FiveShape XH FIVEBARPOS

define [WynnShape bot top] : glyph-construction
	include : VBarLeft SB bot top
	include : dispiro
		widths.rhs
		g4 SB [mix bot top 0.8]
		g4 MIDDLE (top - O)
		archv
		g4 (RIGHTSB - O) [mix bot top 0.7]
		g4 (SB + STROKE * CORRECTION_HX) [mix bot top 0.1]

create-glyph 'Wynn' : glyph-construction
	assign-unicode 0x1F7
	include capitalMarks
	include : WynnShape 0 CAP

create-glyph 'wynn' : glyph-construction
	assign-unicode 0x1BF
	include pMarks
	include : WynnShape DESCENDER XH


define [YoghShape top bot] : glyph-construction
	include : dispiro
		widths.rhs
		g4 SB (top - HOOK)
		hookstart top
		g4 RIGHTSB (top - SMOOTHB)
		alsothruthem {{0.5 0.75}} important
		g4 [mix SB RIGHTSB 0.1] [mix bot top 0.4]
	include : dispiro
		widths.rhs
		g4 [mix SB RIGHTSB 0.75] [mix bot (top - SMOOTHB) 0.75] [widths.heading 0 (STROKE * 1.25) DOWNWARD]
		g4 RIGHTSB ([mix bot (top - SMOOTHB) 0.475] + 1) [widths 0 STROKE]
		g4 RIGHTSB ([mix bot (top - SMOOTHB) 0.475] - 1)
		alsothruthem {{0.25 0.6} {0.5 0.81}}
		g4 SB (bot + O)

create-glyph 'Yogh' : glyph-construction
	assign-unicode 0x21C
	include capitalMarks
	include : YoghShape CAP 0

create-glyph 'yogh' : glyph-construction
	assign-unicode 0x21D
	include pMarks
	include : YoghShape XH DESCENDER

# Latinified greek letters
define [RamsHornShape bottom top] : glyph-construction
	local hf : [adviceBlackness 4] / 2
	local d : hf * 2 + WIDTH * 0.05

	include : dispiro
		widths.center
		g4 (SB + HALFSTROKE * CORRECTION_HX + O) top [heading DOWNWARD]
		quadcontrols 1 0.7 16
		g4 (MIDDLE + d - hf) (bottom + d * (1 - globalTransform.yx * 0.5)) [widths hf hf]
		arcvh
		g4 (MIDDLE + CORRECTION_OMIDX * hf * 2) (bottom + hf)
		archv
		g4 (MIDDLE - d + hf) (bottom + d * (1 + globalTransform.yx * 0.5))
		quadcontrols 0 0.3 16
		g4 (RIGHTSB - HALFSTROKE * CORRECTION_HX - O) top [widths.heading HALFSTROKE HALFSTROKE UPWARD]

create-glyph 'latingamma' : glyph-construction
	assign-unicode 0x263
	include pMarks
	include : RamsHornShape DESCENDER XH

create-glyph 'latinGamma' : glyph-construction
	assign-unicode 0x194
	include ifMarks
	include : RamsHornShape DESCENDER CAP

create-glyph 'ramshorn' : glyph-construction
	assign-unicode 0x264
	include eMarks
	include : RamsHornShape 0 XH

# Glottalstop
create-glyph 'glottalstop' : glyph-construction
	assign-unicode 0x294
	include bMarks
	include : dispiro
		widths.rhs
		g4 SB (CAP - HOOK)
		hookstart CAPO
		g4 RIGHTSB (CAP - [adviceGlottalStopSmooth CAP 1])
		alsothru 0.5 0.45 [widths (ESS / 2) (ESS / 2)]
		flat (MIDDLE - HALFSTROKE * CORRECTION_HX) (XH * 0.3) [widths STROKE 0]
		curl (MIDDLE - HALFSTROKE * CORRECTION_HX) 0 [heading DOWNWARD]
	if SLAB : begin
		include : CenterBottomSerif MIDDLE 0 JUT

create-glyph 'revglottalstop' : glyph-construction
	assign-unicode 0x295
	include bMarks
	include : dispiro
		widths.lhs
		g4 RIGHTSB (CAP - HOOK)
		hookstart CAPO
		g4 SB (CAP - [adviceGlottalStopSmooth CAP (-1)])
		alsothru 0.5 0.45 [widths (ESS / 2) (ESS / 2)]
		flat (MIDDLE + HALFSTROKE * CORRECTION_HX) (XH * 0.3) [widths 0 STROKE]
		curl (MIDDLE + HALFSTROKE * CORRECTION_HX) 0 [heading DOWNWARD]
	if SLAB : begin
		include : CenterBottomSerif MIDDLE 0 JUT

create-glyph 'smallglottalstop' : glyph-construction
	assign-unicode 0x242
	include bMarks
	include : dispiro
		widths.rhs
		g4 SB (XH - HOOK)
		hookstart XO
		g4 RIGHTSB (XH - [adviceGlottalStopSmooth XH 1])
		alsothru 0.5 0.45 [widths (ESS / 2) (ESS / 2)]
		flat (MIDDLE - HALFSTROKE * CORRECTION_HX) (XH * 0.15) [widths STROKE 0]
		curl (MIDDLE - HALFSTROKE * CORRECTION_HX) 0 [heading DOWNWARD]
	if SLAB : begin
		include : CenterBottomSerif MIDDLE 0 JUT

create-glyph 'invglottalstopbar' : glyph-construction
	assign-unicode 0x1BE
	include eMarks
	include : dispiro
		widths.lhs
		g4 RIGHTSB (XH - HOOK)
		hookstart XO
		g4 SB (XH - [adviceGlottalStopSmooth XH 1])
		alsothru 0.5 0.45 [widths (ESS / 2) (ESS / 2)]
		flat (MIDDLE + HALFSTROKE * CORRECTION_HX) (XH * 0.15) [widths 0 STROKE]
		curl (MIDDLE + HALFSTROKE * CORRECTION_HX) 0 [heading DOWNWARD]
	include : HOverlayBar (MIDDLE - LONGJUT * 0.6) (MIDDLE + LONGJUT * 0.6) (XH * 0.25)
	include : FlipAround MIDDLE (XH / 2)

create-glyph 'fineglottalstop' : glyph-construction
	include bMarks
	local fine : markHalfStroke * 2
	include : dispiro
		widths.rhs fine
		g4 SB (CAP - HOOK)
		hookstart CAPO
		g4 RIGHTSB (CAP - [adviceGlottalStopSmooth CAP 1])
		alsothru 0.5 0.45 [widths markHalfStroke markHalfStroke]
		flat (MIDDLE - fine / 2 * CORRECTION_HX) (XH * 0.3) [widths fine 0]
		curl (MIDDLE - fine / 2 * CORRECTION_HX) 0 [heading DOWNWARD]
	if SLAB : begin
		include : CenterBottomSerif MIDDLE 0 JUT fine

create-glyph 'finerevglottalstop' : glyph-construction
	include bMarks
	local fine : markHalfStroke * 2
	include : dispiro
		widths.lhs fine
		g4 RIGHTSB (CAP - HOOK)
		hookstart CAPO
		g4 SB (CAP - [adviceGlottalStopSmooth CAP (-1)])
		alsothru 0.5 0.45 [widths markHalfStroke markHalfStroke]
		flat (MIDDLE + fine / 2 * CORRECTION_HX) (XH * 0.3) [widths 0 fine]
		curl (MIDDLE + fine / 2 * CORRECTION_HX) 0 [heading DOWNWARD]
	if SLAB : begin
		include : CenterBottomSerif MIDDLE 0 JUT fine

# SMCPs

create-glyph 'smcpOE' : glyph-construction
	assign-unicode 0x276
	include eMarks
	include : OEShape XH


# Others
create-glyph 'lyogh' : glyph-construction
	assign-unicode 0x26E
	include ifMarks
	include : EzhShape XH DESCENDER 0.4
	include : VBarLeft SB (XH * 0.1) CAP

# Aliases
alias 'latinLambda' 0x245 'Lambda'
alias 'latindelta' 0x1E9F 'delta'
alias 'latinphi' 0x278 'cyref'
alias 'bulleye' 0x298 'zero.dotted'
alias 'lstinSigma' 0x1A9 'Sigma'
alias 'capglottalstop' 0x241 'glottalstop'
alias 'latinBe' 0x182 'cyrBe'
# Turned glyphs

turned nothing 0x1D02 'ae' MIDDLE (XH / 2)
turned 'turndelta' 0x18D 'delta' MIDDLE (XH / 2) pMarks
turned 'invglottalstop' 0x296 'revglottalstop' MIDDLE (CAP / 2)