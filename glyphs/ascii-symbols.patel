
###### ASCII SYMBOLS

create-glyph 'dollar' : glyph-construction {
	set-width WIDTH; assign-unicode '$'
	include glyphs.S
	put-shapes : create-stroke 
		:.start-from MIDDLE [CAP - HALFSTROKE] 
		:.set-width HALFSTROKE HALFSTROKE 
		:.line-to MIDDLE [CAP - DESCENDER / 2]
		:.to-outline
	put-shapes : create-stroke
		:.start-from MIDDLE [DESCENDER / 2]
		:.set-width HALFSTROKE HALFSTROKE
		:.line-to MIDDLE HALFSTROKE
		:.to-outline
}

create-glyph 'ampersand' : glyph-construction {
	set-width WIDTH
	assign-unicode '&'
	
	local fine : Math.min STROKE [[RIGHTSB - SB] * 0.25]
	local p 0.85
	local l 0.05
	local pr 0.9
	local q 0.45
	local r 1.1
	local s 0
	
	put-shapes : create-stroke
		:.start-from [RIGHTSB - O] CAPMIDDLE
		:.set-width  0 STROKE
		:.heads-to   DOWNWARD
		:.line-to    [RIGHTSB - O] SMOOTHA
		:.arc-vh-to  MIDDLE O
		:.heads-to   LEFTWARD
		:.arc-hv-to  [SB + O] SMOOTHB
		:.to-outline

	put-shapes : xsStrand [SB + O] SMOOTHB [mix SB RIGHTSB p] [CAP - SMOOTHB * pr] HALFSTROKE [fine / 2]

	put-shapes : create-stroke
		:.start-from [mix SB RIGHTSB p] [CAP - SMOOTHB * pr]
		:.set-width  fine 0
		:.arc-vh-to  [mix SB RIGHTSB [mix p l 0.5]] CAPO
		:.heads-to   LEFTWARD
		:.arc-hv-to  [mix SB RIGHTSB l] [CAP - SMOOTHA * pr]
		:.to-outline
		
	put-shapes : xsStrand [mix SB RIGHTSB l] [CAP - SMOOTHA * pr] [mix SB RIGHTSB r] [SMOOTHA * s] [fine / 2] [fine / 2] null null [SMOOTHA * pr * 0.6]

}

### Brackets

local parenTop [CAP - DESCENDER / 2]
local parenBot [DESCENDER / 2]
local parenMid [mix parenTop parenBot 0.5]

local parenOutside 0.15
local parenInside  0.65
local bracketOutside 0.15
local bracketInside 0.9
local braceOutside  0.1
local braceInside   0.9

create-glyph 'parenleft' : glyph-construction {
	set-width WIDTH
	assign-unicode '('
	
	local p 0.6

	put-shapes : create-stroke
		:.start-from [mix SB RIGHTSB parenInside] parenTop
		:.set-width  STROKE 0
		:.curve-to   [mix SB RIGHTSB parenOutside] [mix parenMid parenTop p] [mix SB RIGHTSB parenOutside] parenMid
		:.curve-to   [mix SB RIGHTSB parenOutside] [mix parenMid parenBot p] [mix SB RIGHTSB parenInside] parenBot
		:.to-outline
}

create-glyph 'parenright' : glyph-construction {
	set-width WIDTH
	assign-unicode ')'
	
	local p 0.6
	
	put-shapes : create-stroke
		:.start-from [mix RIGHTSB SB parenInside] parenTop
		:.set-width  0 STROKE
		:.curve-to   [mix RIGHTSB SB parenOutside] [mix parenMid parenTop p] [mix RIGHTSB SB parenOutside] parenMid
		:.curve-to   [mix RIGHTSB SB parenOutside] [mix parenMid parenBot p] [mix RIGHTSB SB parenInside] parenBot
		:.to-outline
}

create-glyph 'bracketleft' : glyph-construction {
	set-width WIDTH
	assign-unicode '['

	put-shapes : create-stroke
		:.start-from [mix SB RIGHTSB bracketOutside] parenBot
		:.set-width  STROKE 0
		:.heads-to   RIGHTWARD
		:.line-to    [mix SB RIGHTSB bracketInside] parenBot
		:.heads-to   RIGHTWARD
		:.to-outline

	put-shapes : create-stroke
		:.start-from [mix SB RIGHTSB bracketOutside] parenTop
		:.set-width  0 STROKE
		:.heads-to   RIGHTWARD
		:.line-to    [mix SB RIGHTSB bracketInside] parenTop
		:.heads-to   RIGHTWARD
		:.to-outline
		
	put-shapes : create-stroke
		:.start-from [mix SB RIGHTSB bracketOutside] parenBot
		:.set-width  0 STROKE
		:.heads-to   UPWARD
		:.line-to    [mix SB RIGHTSB bracketOutside] parenTop
		:.heads-to   UPWARD
		:.to-outline
}

create-glyph 'parenright' : glyph-construction {
	set-width WIDTH
	assign-unicode ']'
	
	put-shapes : create-stroke
		:.start-from [mix RIGHTSB SB bracketOutside] parenBot
		:.set-width  0 STROKE
		:.heads-to   LEFTWARD
		:.line-to    [mix RIGHTSB SB bracketInside] parenBot
		:.heads-to   LEFTWARD
		:.to-outline

	put-shapes : create-stroke
		:.start-from [mix RIGHTSB SB bracketOutside] parenTop
		:.set-width  STROKE 0
		:.heads-to   LEFTWARD
		:.line-to    [mix RIGHTSB SB bracketInside] parenTop
		:.heads-to   LEFTWARD
		:.to-outline
		
	put-shapes : create-stroke
		:.start-from [mix RIGHTSB SB bracketOutside] parenBot
		:.set-width  STROKE 0
		:.heads-to   UPWARD
		:.line-to    [mix RIGHTSB SB bracketOutside] parenTop
		:.heads-to   UPWARD
		:.to-outline
}

create-glyph 'braceleft' : glyph-construction {
	set-width WIDTH
	assign-unicode '{'
	
	local parenCenter [mix SB RIGHTSB [mix braceInside braceOutside 0.5]]
	local radius    : [mix SB RIGHTSB braceInside] - parenCenter

	put-shapes : create-stroke
		:.start-from [mix SB RIGHTSB braceInside] [parenTop - HALFSTROKE]
		:.set-width  HALFSTROKE HALFSTROKE
		:.heads-to   LEFTWARD
		:.arc-hv-to  parenCenter [parenTop - radius]
		:.line-to    parenCenter [parenMid + radius]
		:.arc-vh-to  [mix SB RIGHTSB braceOutside] parenMid
		:.heads-to   LEFTWARD
		:.to-outline
	
	put-shapes : create-stroke
		:.start-from [mix SB RIGHTSB braceInside] [parenBot + HALFSTROKE]
		:.set-width  HALFSTROKE HALFSTROKE
		:.heads-to   LEFTWARD
		:.arc-hv-to  parenCenter [parenBot + radius]
		:.line-to    parenCenter [parenMid - radius]
		:.arc-vh-to  [mix SB RIGHTSB braceOutside] parenMid
		:.heads-to   LEFTWARD
		:.to-outline
}

create-glyph 'braceright' : glyph-construction {
	set-width WIDTH
	assign-unicode '}'
	
	local parenCenter [mix RIGHTSB SB [mix braceInside braceOutside 0.5]]
	local radius    : [mix RIGHTSB SB braceOutside] - parenCenter

	put-shapes : create-stroke
		:.start-from [mix RIGHTSB SB braceInside] [parenTop - HALFSTROKE]
		:.set-width  HALFSTROKE HALFSTROKE
		:.heads-to   RIGHTWARD
		:.arc-hv-to  parenCenter [parenTop - radius]
		:.line-to    parenCenter [parenMid + radius]
		:.arc-vh-to  [mix RIGHTSB SB braceOutside] parenMid
		:.heads-to   RIGHTWARD
		:.to-outline
	
	put-shapes : create-stroke
		:.start-from [mix RIGHTSB SB braceInside] [parenBot + HALFSTROKE]
		:.set-width  HALFSTROKE HALFSTROKE
		:.heads-to   RIGHTWARD
		:.arc-hv-to  parenCenter [parenBot + radius]
		:.line-to    parenCenter [parenMid - radius]
		:.arc-vh-to  [mix RIGHTSB SB braceOutside] parenMid
		:.heads-to   RIGHTWARD
		:.to-outline
}