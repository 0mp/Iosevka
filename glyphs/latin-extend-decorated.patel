###### EXTENDED LATIN CHARACTERS
###### DECORATED

# Slashed
create-glyph 'Oslash' : glyph-construction {
	assign-unicode 0xD8
	
	local fine : adviceBlackness 10
	
	include glyphs.O AS_BASE
	include : create-stroke
		:.start-from [SB + O + fine] [mix CAP 0 1.05]
		:.set-width  fine fine
		:.line-to    [RIGHTSB - O - fine] [mix 0 CAP 1.05]
}
create-glyph 'oslash' : glyph-construction {
	assign-unicode 0xF8
	
	local fine : adviceBlackness 10
	
	include glyphs.o AS_BASE
	include : create-stroke
		:.start-from [SB + O + fine] [mix XH 0 1.05]
		:.set-width  fine fine
		:.line-to    [RIGHTSB - O - fine] [mix 0 XH 1.05]
}
create-glyph 'Lslash' : glyph-construction {
	assign-unicode 0x141
	include glyphs.L AS_BASE
	local fine : 0.5 * [adviceBlackness 5]
	local middle : mix STROKE CAP 0.5
	include : create-stroke
		:.start-from [mix 0 SB 0.5] [middle - LONGJUT * 0.4]
		:.set-width  fine fine
		:.line-to    [1.6 * LONGJUT + [mix 0 SB 0.5]] [middle + LONGJUT * 0.4]
}
create-glyph 'lslash' : glyph-construction {
	assign-unicode 0x142
	include glyphs.l AS_BASE
	local fine : 0.5 * [adviceBlackness 5]
	local middle : mix 0 CAP BARPOS
	local middlex [tp [Upright] glyphs.l.anchors.above].x
	include : create-stroke
		:.start-from [middlex - LONGJUT * 0.8] [middle - LONGJUT * 0.4]
		:.set-width  fine fine
		:.line-to    [middlex + LONGJUT * 0.8] [middle + LONGJUT * 0.4]
}
# Barred
create-glyph 'Hbar' : glyph-construction {
	assign-unicode 0x126
	
	include glyphs.H AS_BASE
	include : HOverlayBar [mix SB 0 0.7] [mix RIGHTSB WIDTH 0.7] [mix CAPMIDDLE CAP 0.45]
}
create-glyph 'hbar' : glyph-construction {
	assign-unicode 0x127
	
	include glyphs.h AS_BASE
	include : HOverlayBar [mix SB 0 0.7] [mix SB RIGHTSB 0.5] [mix XH CAP 0.45]
}
create-glyph 'Tbar' : glyph-construction {
	assign-unicode 0x166
	
	include glyphs.T AS_BASE
	include : HOverlayBar [mix MIDDLE SB 0.8] [mix MIDDLE RIGHTSB 0.8] [mix 0 CAP 0.45]
}
create-glyph 'tbar' : glyph-construction {
	assign-unicode 0x167
	
	include glyphs.t AS_BASE
	include : HOverlayBar [[mix MIDDLE SB 0.7] - TBALANCE * 0.5] [[mix MIDDLE RIGHTSB 0.7] - TBALANCE * 0.5] [mix 0 XH 0.6]
}
# Dotted
create-glyph 'Ldot' : glyph-construction {
	assign-unicode 0x13F
	include glyphs.L AS_BASE
	include : list {
		Ring [[mix STROKE CAP 0.5] + DOTRADIUS] [[mix STROKE CAP 0.5] - DOTRADIUS] [[mix SB RIGHTSB 0.65] - DOTRADIUS] [[mix SB RIGHTSB 0.65] + DOTRADIUS]
	}
}
create-glyph 'ldot' : glyph-construction {
	assign-unicode 0x140
	include glyphs.l AS_BASE
	apply-transform : Translate [-DOTRADIUS / 2] 0
	include : list {
		Ring [[mix STROKE CAP 0.5] + DOTRADIUS] [[mix STROKE CAP 0.5] - DOTRADIUS] [[mix SB RIGHTSB 1] - DOTSIZE] [mix SB RIGHTSB 1]
	}
}
create-glyph 'obar' : glyph-construction {
	assign-unicode 0x275
	include glyphs.o AS_BASE
	include : HOverlayBar [SB - O] [RIGHTSB + O] [XH * 0.5]
}
create-glyph 'glottalstopbar' : glyph-construction {
	assign-unicode 0x2A1
	include glyphs.glottalstop AS_BASE
	include : HOverlayBar [MIDDLE - LONGJUT * 0.6] [MIDDLE + LONGJUT * 0.6] [CAP * 0.25]
}
create-glyph 'revglottalstopbar' : glyph-construction {
	assign-unicode 0x2A2
	include glyphs.revglottalstop AS_BASE
	include : HOverlayBar [MIDDLE - LONGJUT * 0.6] [MIDDLE + LONGJUT * 0.6] [CAP * 0.25]
}
create-glyph 'eshbar' : glyph-construction {
	assign-unicode 0x284
	include glyphs.esh AS_BASE
	include : HOverlayBar [MIDDLE - LONGJUT * 0.6] [MIDDLE + LONGJUT * 0.6] [XH * 0.25]
}
# bdot and ddot 's dots are closer to the glyph
create-glyph 'bdot' : glyph-construction {
	include glyphs.dotAbove
	apply-transform : Translate [WIDTH + HALFSTROKE] 0
	include glyphs.b AS_BASE
	assign-unicode 0x1E03
}
create-glyph 'ddot' : glyph-construction {
	include glyphs.dotAbove
	apply-transform : Translate [WIDTH - HALFSTROKE] 0
	include glyphs.d AS_BASE
	assign-unicode 0x1E0B
}
# Legged
create-glyph 'rlongleg' : glyph-construction {
	assign-unicode 0x27C
	include pMarks
	include glyphs.r
	include : VBarLeft [SB + RBALANCE] DESCENDER 0
}
create-glyph 'turnmleg' : glyph-construction {
	assign-unicode 0x270
	include pMarks
	include glyphs.m
	include : FlipAround MIDDLE [XH / 2]
	include : VBarRight [RIGHTSB - O] DESCENDER 0 [adviceBlackness 3.5]
}
# Hooktop
define [HooktopLeftBar stroke] : glyph-construction {
	include : create-stroke
		:.start-from [RIGHTSB - OXHOOK] [CAP - HOOK]
		:.set-width  [fallback stroke STROKE] 0
		:.curve-to   [MIDDLE + KAPPA_HOOK * [MIDDLE - para.sb]] CAPO [MIDDLE - OMIDCOR_S] CAPO
		:.arc-hv-to  SB [CAP - SMALLSMOOTHA]
		:.line-to    SB 0
		:.heads-to   DOWNWARD
}
create-glyph 'hhooktop' : glyph-construction {
	assign-unicode 0x266
	include bMarks
	include : nShoulder [SB + STROKE * ITALICCOR] MIDDLE RIGHTSB [STROKE * 0.4]
	include : HooktopLeftBar
}
create-glyph 'bhooktop' : glyph-construction {
	assign-unicode 0x253
	include bMarks
	include : oLeft
	include : HooktopLeftBar
}
create-glyph 'scriptghooktop' : glyph-construction {
	assign-unicode 0x260
	include glyphs.scriptg AS_BASE
	include : VerticalHook [RIGHTSB - HALFSTROKE * ITALICCOR] XH HOOKX [-HOOK]
}
create-glyph 'dhooktop' : glyph-construction {
	assign-unicode 0x257
	include bMarks
	include glyphs.'a.italic'
	include : VerticalHook [RIGHTSB - HALFSTROKE * ITALICCOR] XH HOOKX [-HOOK]
}
create-glyph 'Chooktop' : glyph-construction {
	assign-unicode 0x187
	include glyphs.C AS_BASE
	include : VBarRight RIGHTSB [CAP - HOOK] CAP
	include : VerticalHook [RIGHTSB - HALFSTROKE * ITALICCOR] CAP HOOKX [-HOOK]
}
create-glyph 'chooktop' : glyph-construction {
	assign-unicode 0x188
	include glyphs.c AS_BASE
	include : VBarRight RIGHTSB [XH - HOOK] XH
	include : VerticalHook [RIGHTSB - HALFSTROKE * ITALICCOR] XH HOOKX [-HOOK]
}
create-glyph 'smcpGhooktop' : glyph-construction {
	assign-unicode 0x29B
	include glyphs.smcpG AS_BASE
	include : VBarRight RIGHTSB [XH - HOOK] XH
	include : VerticalHook [RIGHTSB - HALFSTROKE * ITALICCOR] XH HOOKX [-HOOK]
}
create-glyph 'vhooktop' : glyph-construction {
	assign-unicode 0x2C71
	include eMarks
	
	local TURN [XH * 0.9]
	local m : MIDDLE - HOOKX / 10
	include : create-stroke
		:.start-from SB XH
		:.heads-to   DOWNWARD
		:.set-width  STROKE 0
		:.line-to    SB TURN
		:.heads-to   DOWNWARD
		:.curve-to   SB [[1 - 0.27] * TURN] [m - STROKE / 2] 0
		:.set-width  [STROKE * 0.8] 0
	
	local x1 : RIGHTSB - HOOKX / 3
	local x2 : mix m RIGHTSB 0.52
	local y1 : TURN - HOOK
	local y2 : mix 0 XH 0.3
	include : create-stroke
		:.start-from [RIGHTSB + HOOKX / 4] [XH - STROKE]
		:.set-width  0 STROKE
		:.curve-to   [linreg y1 x1 y2 x2 [XH - STROKE]] [XH - STROKE] x1 y1
		:.curve-to   x2 y2 [m + STROKE / 2] 0
		:.set-width  0 [STROKE * 0.8]
	
	#bottom cap
	start-from [m + STROKE / 2] 0
	line-to [m - STROKE / 2] 0
	line-to m [STROKE * 0.8]
}
create-glyph 'whooktop' : glyph-construction {
	assign-unicode 0x2C73
	include eMarks
	
	local TURN [XH * 0.75]
	local turn2 [XH * 0.59]
	local wheight [XH * 0.6]
	local bottomStroke : adviceBlackness 5.2
	local m1 : WIDTH * 0.325
	local m2 : WIDTH * 0.675
	
	include : create-stroke
		:.start-from SB XH
		:.heads-to DOWNWARD
		:.set-width STROKE 0
		:.line-to SB TURN
		:.heads-to DOWNWARD
		:.curve-to SB [[1 - 0.27] * TURN] [m1 - bottomStroke / 2] 0
		:.set-width bottomStroke 0
	
	include : create-stroke
		:.start-from RIGHTSB [XH - HOOK]
		:.heads-to DOWNWARD
		:.set-width 0 STROKE
		:.curve-to RIGHTSB [[1 - 0.27] * TURN] [m2 + bottomStroke / 2] 0
		:.set-width 0 bottomStroke
		
	include : create-stroke
		:.start-from [MIDDLE + bottomStroke / 2] wheight
		:.heads-to DOWNWARD
		:.set-width 0 bottomStroke
		:.line-to [MIDDLE + bottomStroke / 2] turn2
		:.heads-to DOWNWARD
		:.curve-to [MIDDLE + bottomStroke / 2] [[1 - 0.1] * turn2] [m1 + bottomStroke / 2] 0
		:.set-width 0 bottomStroke
	
	include : create-stroke
		:.start-from [MIDDLE - bottomStroke / 2] wheight
		:.heads-to DOWNWARD
		:.set-width bottomStroke 0
		:.line-to [MIDDLE - bottomStroke / 2] turn2
		:.heads-to DOWNWARD
		:.curve-to [MIDDLE - bottomStroke / 2] [[1 - 0.1] * turn2] [m2 - bottomStroke / 2] 0
		:.set-width bottomStroke 0

	#bottom cap
	start-from [m1 + bottomStroke / 2] 0
	line-to [m1 - bottomStroke / 2] 0
	line-to m1 bottomStroke
	
	start-from [m2 + bottomStroke / 2] 0
	line-to [m2 - bottomStroke / 2] 0
	line-to m2 bottomStroke
	include : VerticalHook [RIGHTSB - HALFSTROKE * ITALICCOR] [XH - HOOK] [HOOKX * 0.65] [-HOOK + HALFSTROKE]
}
# Left-tail
create-glyph 'fltail' : glyph-construction {
	assign-unicode 0x192
	include glyphs.'longs.italic' AS_BASE
	include : fBar
}
create-glyph 'Fltail' : glyph-construction {
	assign-unicode 0x191
	include glyphs.F AS_BASE
	include : VerticalHook [SB * 1.5 + HALFSTROKE * ITALICCOR] 0 [-HOOKX] HOOK
}
create-glyph 'nltail' : glyph-construction {
	assign-unicode 0x272
	include glyphs.n AS_BASE
	include : VerticalHook [SB + HALFSTROKE * ITALICCOR] 0 [-HOOKX] HOOK
}
create-glyph 'mltail' : glyph-construction {
	assign-unicode 0x271
	include pMarks
	include glyphs.m
	local fine : adviceBlackness 3.5
	include : VerticalHook [RIGHTSB - O - fine / 2 * ITALICCOR] 0 [-HOOKX] HOOK fine
}
create-glyph 'hhooktopltail' : glyph-construction {
	assign-unicode 0x267
	include pMarks
	include glyphs.hhooktop
	include : VerticalHook [RIGHTSB - HALFSTROKE * ITALICCOR] 0 [-HOOKX] HOOK
}
# Right-tail
create-glyph 'srtail' : glyph-construction {
	assign-unicode 0x282
	include glyphs.rtailBR
	apply-transform : Upright
	apply-transform : Translate [SB + STROKE * ITALICCOR] 0
	apply-transform : Italify
	include pMarks
	include glyphs.s
	include : VBarLeft SB 0 SHOOK
}
create-glyph 'lrtail' : glyph-construction {
	assign-unicode 0x26D
	include glyphs.rtailBR
	apply-transform : Translate [MIDDLE + HALFSTROKE * ITALICCOR] 0
	include glyphs.'l.hooky'
	include ifMarks
}
create-glyph 'rrtail' : glyph-construction {
	assign-unicode 0x27D
	include pMarks
	include glyphs.r
	include : create-glyph : glyph-construction {
		include glyphs.rtailBR
		apply-transform : Upright
		apply-transform : Translate [SB + RBALANCE + STROKE * ITALICCOR] 0
		apply-transform : Italify
	}
}
create-glyph 'turnrrtail' : glyph-construction {
	assign-unicode 0x27B
	include pMarks
	include glyphs.r
	include : FlipAround MIDDLE [XH / 2]
	include : create-glyph : glyph-construction {
		include glyphs.rtailBR
		apply-transform : Upright
		apply-transform : Translate [RIGHTSB - RBALANCE] 0
		apply-transform : Italify
	}
}
create-glyph 'trtail' : glyph-construction {
	assign-unicode 0x288
	include ifMarks
	include : SmallTShape CAP DESCENDER
}
create-glyph 'ezhtail' : glyph-construction {
	assign-unicode 0x1BA
	local b : mix DESCENDER XH 0.25
	include : EzhShape XH b nothing true
	local y : mix [mix b XH 0.6] b 0.5
	include : create-stroke
		:.start-from RIGHTSB y
		:.heads-to   DOWNWARD
		:.set-width  0 STROKE
		:.arc-vh-to  [mix SB RIGHTSB 0.45] b
		:.line-to    [mix SB RIGHTSB 0.4] b
		:.arc-hv-to  [SB + STROKE * ITALICCOR] [mix [DESCENDER + STROKE] b 0.5]
		:.arc-vh-to  [mix SB RIGHTSB 0.4] [DESCENDER + STROKE]
		:.line-to    RIGHTSB [DESCENDER + STROKE]
}
# Curly tail
define [CurlyTail fine wide rinner m1 y1 bottom _right x1 x2 y2] : glyph-construction {
	local right : _right - fine * [if [_right > m1] 1 [-1]]
	local mid : mix [mix m1 right 0.5] [right - rinner * [if [_right > m1] 1 [-1]]] 0.4
	local midb : mix [mix m1 right 0.5] [right - rinner * [if [_right > m1] 1 [-1]]] 0.3
	include : create-stroke
		:.start-from m1 y1
		:.heads-to   DOWNWARD
		:.set-width  [if [_right > m1] 0 wide] [if [_right > m1] wide 0]
		:.arc-vh-to  midb [bottom + fine + O]
		:.set-width  [if [_right > m1] 0 fine] [if [_right > m1] fine 0]
		:.arc-hv-to  right [bottom + fine + rinner]
		:.arc-vh-to  mid [bottom + fine + rinner * 2 - O]
		:.curve-to   x1 [bottom + fine + rinner * 2 - O] x2 y2
}
define [HCurlyTail fine wide rinner left m1 _right x1 x2 y2] : glyph-construction {
	local right : _right - fine
	local mid : right - rinner + O
	include : create-stroke
		:.start-from left wide
		:.heads-to   RIGHTWARD
		:.set-width  0 wide
		:.line-to    m1 wide
		:.arc-hv-to  right [wide + rinner]
		:.set-width  0 fine
		:.arc-vh-to  mid [wide + rinner * 2 - O]
		:.curve-to   x1 [wide + rinner * 2 - O] x2 y2
}
create-glyph 'ncurlytail' : glyph-construction {
	assign-unicode 0x235
	local fine : adviceBlackness 4.5
	local rinner : fine * 0.35
	local wide STROKE
	local m1 : RIGHTSB - rinner * 2
	local x1 : mix SB m1 0.8
	local x2 : mix SB m1 0.5
	local y2 : -fine
	include eMarks
	include : VBarLeft SB 0 XH wide
	include : nShoulder [SB + wide * ITALICCOR] [mix SB m1 0.5] m1 [STROKE * 0.4] nothing [fine * 2] nothing nothing wide
	include : CurlyTail fine wide rinner m1 [fine * 2] 0 [m1 + rinner * 2 + fine] x1 x2 y2
}
create-glyph 'dcurlytail' : glyph-construction {
	assign-unicode 0x221
	local fine : adviceBlackness 4.5
	local rinner : fine * 0.35
	local wide STROKE
	local m1 : RIGHTSB - rinner * 2
	local x1 : mix SB m1 0.8
	local x2 : mix SB m1 0.5
	local y2 : -fine * 1.5
	include eMarks
	include : VBarRight m1 [fine * 2] CAP
	include : list {
		ORing XO O [SB + O] [m1 - HALFSTROKE] SMALLSMOOTHA SMALLSMOOTHB 0
		ORing [XO - STROKE] [O + STROKE] [SB + STROKE * ITALICCOR + O] [m1 - STROKE * ITALICCOR] [SMALLSMOOTHA - STROKE] [SMALLSMOOTHB - STROKE] 0
	}
	reverse-last
	include : CurlyTail fine wide rinner m1 [fine * 2] 0 [m1 + rinner * 2 + fine] x1 x2 y2
}
create-glyph 'lcurlytail' : glyph-construction {
	assign-unicode 0x234
	include bMarks
	local fine : adviceBlackness 4.5
	local rinner : fine * 0.6
	local m1 : MIDDLE + HALFSTROKE * ITALICCOR
	local x1 : mix SB m1 0.8
	local x2 : mix SB m1 0.25
	local y2 : - fine
	include : leftwardTopSerif MIDDLE CAP LONGJUT
	include : VBarRight m1 [fine * 2] [CAP - STROKE]
	include : CurlyTail fine STROKE rinner m1 [fine * 2] 0 [m1 + LONGJUT ] x1 x2 y2
}
create-glyph 'jcurlytail' : glyph-construction {
	assign-unicode 0x29D
	include pMarks
	set-anchor 'above' BASE [MIDDLE + JBALANCE] XH
	local fine : adviceBlackness 4.25
	local rinner : fine * 0.6
	local m1 : MIDDLE - HALFSTROKE * ITALICCOR + JBALANCE
	local x1 : mix RIGHTSB m1 0.75
	local x2 : mix RIGHTSB m1 0.25
	local y2 : DESCENDER + O
	include : leftwardTopSerif [MIDDLE + JBALANCE] XH LONGJUT
	include : VBarLeft m1 [DESCENDER + fine * 3] [XH - STROKE]
	include : CurlyTail fine STROKE rinner m1 [DESCENDER + fine * 3] DESCENDER [m1 - LONGJUT] x1 x2 y2
	include glyphs.dotAbove
}
create-glyph 'eshcurlytail' : glyph-construction {
	assign-unicode 0x286
	include ifMarks
	local fine : adviceBlackness 4.25
	local rinner : fine * 0.6
	local m1 : MIDDLE - HALFSTROKE * ITALICCOR 
	local x1 : mix RIGHTSB m1 0.75
	local x2 : mix RIGHTSB m1 0.25
	local y2 : DESCENDER + O
	include glyphs.'longs.upright'
	include : CurlyTail fine STROKE rinner m1 [DESCENDER + fine * 3] DESCENDER [m1 - LONGJUT ] x1 x2 y2
}
create-glyph 'tcurlytail' : glyph-construction {
	assign-unicode 0x236
	include bMarks
	local fine : adviceBlackness 4.25
	local rinner : fine * 0.5
	local m1 : MIDDLE - TBALANCE - HALFSTROKE
	local x1 m1
	local x2 : mix SB m1 0.4
	local y2 : -fine
	include : HBarTop [m1 + HALFSTROKE - LONGJUT + TBALANCE2] [m1 + HALFSTROKE + LONGJUT + TBALANCE2] XH
	include : VBarLeft m1 CAP [fine * 2]
	include : CurlyTail fine STROKE rinner [m1 + STROKE * ITALICCOR] [fine * 2] 0 [m1 + STROKE * ITALICCOR + LONGJUT] x1 x2 y2
}
create-glyph 'ccurlytail' : glyph-construction {
	assign-unicode 0x255
	include eMarks
	local rinner : [[XH * 0.425] - STROKE * 1.5] / 2
	include : XSHookUpper XH [SB + O] nothing RIGHTSB SMALLSMOOTHA [HOOK - TAILADJY * globalTransform.yx]
	include : create-stroke
		:.start-from [SB + O] [XH - SMALLSMOOTHA]
		:.set-width  STROKE 0
		:.line-to    [SB + O] SMALLSMOOTHB
		:.heads-to   DOWNWARD

	local m1 : SB + O + STROKE * ITALICCOR
	local x1 : mix SB RIGHTSB 0.25
	local x2 : SB + HALFSTROKE
	local y2 : -XH * 0.1
	include : CurlyTail STROKE STROKE rinner m1 SMALLSMOOTHB 0 RIGHTSB x1 x2 y2
}
create-glyph 'ezhcurlytail' : glyph-construction {
	assign-unicode 0x293
	include eMarks
	local rinner : [[XH * 0.425] - STROKE * 1.5] / 2
	
	include : EzhShape XH DESCENDER nothing true

	local m1 : RIGHTSB - STROKE * ITALICCOR
	local x1 : mix RIGHTSB SB 0.25
	local x2 : RIGHTSB - HALFSTROKE
	local y2 DESCENDER
	include : CurlyTail STROKE STROKE rinner m1 [mix [mix DESCENDER XH 0.6] DESCENDER 0.5] DESCENDER SB x1 x2 y2
}
create-glyph 'zcurlytail' : glyph-construction {
	assign-unicode 0x291
	include eMarks
	
	local cor 1.2
	local fine : adviceBlackness 4.25
	local x1 : mix [SB + STROKE] RIGHTSB 0.55
	local x2 : mix [SB + STROKE] RIGHTSB 0.3
	local y2 : -XH * 0.2
	local rinner : fine * 0.3
	local m1 : RIGHTSB - fine / 2 - rinner + O
	include : HCurlyTail fine STROKE rinner SB m1 [RIGHTSB + fine / 2] x1 x2 y2
	
	include : HBarTop SB RIGHTSB XH
	
	start-from SB STROKE
	line-to [SB + STROKE * cor] STROKE
	line-to RIGHTSB [XH - STROKE]
	line-to [RIGHTSB - STROKE * cor] [XH - STROKE]
	reverse-last
}
# Er tail
define [ErTail] : glyph-construction {
	local left : WIDTH * 0.85 - SB
	include : HBarTop [left - markFine * 2] [left + markFine] [XH * 0.6]
	include : create-stroke
		:.start-from left [XH * 0.6]
		:.set-width  [markFine * 2] 0
		:.arc-vh-to  WIDTH [XH * 0.3]
		:.heads-to   RIGHTWARD
}
create-glyph 'er' : glyph-construction {
	assign-unicode 0x25A
	include eMarks
	local f : Thinner ('schwa') 0.85
	include f.schwa
	include : ErTail
}
create-glyph 'revlatinepsiloner' : glyph-construction {
	assign-unicode 0x25D
	include eMarks
	local f : Thinner ('revlatinepsilon') 0.85
	include f.revlatinepsilon
	include : ErTail
}
# Belted
define [Belt] : glyph-construction {
	local fine : adviceBlackness 4.5
	local r : XH * 0.05
	include : create-stroke
		:.start-from MIDDLE [CAPMIDDLE + r]
		:.set-width  0 fine
		:.heads-to   LEFTWARD
		:.line-to    [MIDDLE - HALFSTROKE - r * 1.5] [CAPMIDDLE + r]
		:.arc-hv-to  [MIDDLE - HALFSTROKE - r * 2.5] CAPMIDDLE
		:.arc-vh-to  [MIDDLE - HALFSTROKE - r * 1.5] [CAPMIDDLE - r]
		:.line-to    [MIDDLE + HALFSTROKE + r * 1.5 + fine] [CAPMIDDLE - r]
}
create-glyph 'lbelt' : glyph-construction {
	assign-unicode 0x26C
	include glyphs.'l.serifed' AS_BASE
	include : Belt
}
create-glyph 'lbeltrtail' : glyph-construction {
	assign-unicode 0xA78E
	include glyphs.lrtail AS_BASE
	include : Belt
}
create-glyph 'ltildeover' : glyph-construction {
	assign-unicode 0x26B
	include glyphs.'l.serifed' AS_BASE
	include : create-glyph : glyph-construction {
		include glyphs.tildeAbove
		apply-transform : Upright
		apply-transform : Translate [MIDDLE - markMiddle] [CAP * 0.525 - [mix aboveMarkBot aboveMarkTop 0.5]]
		apply-transform : Italify
	}
}

# Turned glyphs
turned nothing 0x27A 'rlongleg' MIDDLE [XH / 2] [anchorDeriv bMarks (.anchors (.bottomright (.x RIGHTSB - RBALANCE .y 0)))]