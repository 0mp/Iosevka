###### Monotonic greek

# Aliases
alias 'Alpha' 0x391 'A'
alias 'Beta' 0x392 'B'
alias 'Epsilon' 0x395 'E'
alias 'Zeta' 0x396 'Z'
alias 'Eta' 0x397 'H'
alias 'Iota' 0x399 'I'
alias 'Kappa' 0x39A 'K'
alias 'Mu' 0x39C 'M'
alias 'Nu' 0x39D 'N'
alias 'Omicron' 0x39F 'O'
alias 'Rho' 0x3A1 'P'
alias 'Tau' 0x3A4 'T'
alias 'Upsilon' 0x3A5 'Y'
alias 'Chi' 0x3A7 'X'
alias 'omicron' 0x3BF 'o'

# Capital
define [LambdaShape STROKE] : glyph-construction
	local TURN (CAP * 0.1)
	local curviness 0.2
	include : spiro
		widths.rhs STROKE
		flat SB 0    [heading UPWARD]
		curl SB TURN [heading UPWARD]
		quadcontrols 0 curviness
		g4   (MIDDLE - STROKE / 2) CAP [widths 0 (STROKE * 0.8)]
	include : spiro
		widths.lhs STROKE
		flat RIGHTSB 0    [heading UPWARD]
		curl RIGHTSB TURN [heading UPWARD]
		quadcontrols 0 curviness
		g4   (MIDDLE + STROKE / 2) CAP [widths (STROKE * 0.8) 0]

	start-from (MIDDLE - STROKE / 2) CAP
	line-to (MIDDLE + STROKE / 2) CAP
	line-to MIDDLE (CAP - STROKE)

create-glyph 'Lambda' : glyph-construction
	assign-unicode 0x39B
	include capitalMarks
	include : LambdaShape STROKE

create-glyph 'Delta' : glyph-construction
	assign-unicode 0x394
	include glyphs.Lambda AS_BASE
	include : HBar (SB + HALFSTROKE) (RIGHTSB - HALFSTROKE) HALFSTROKE

create-glyph 'Gamma' : glyph-construction
	assign-unicode 0x393
	include glyphs.L AS_BASE
	include : FlipAround MIDDLE CAPMIDDLE 1 (-1)

define [SigmaShape top bottom _fine] : glyph-construction
	local cor 1.15
	local fine : fallback _fine STROKE
	
	include : HBarTop SB RIGHTSB top fine
	include : HBarBottom SB RIGHTSB bottom fine
	
	local midx : mix SB RIGHTSB 0.4
	start-from SB (bottom + fine)
	line-to (SB + fine * cor) (bottom + fine)
	line-to (midx + fine * cor) [mix bottom top 0.5]
	line-to (SB + fine * cor) (top - fine)
	line-to SB (top - fine)
	line-to midx [mix bottom top 0.5]
	reverse-last

create-glyph 'Sigma' : glyph-construction
	set-width WIDTH
	assign-unicode 0x3A3
	include capitalMarks

	include : SigmaShape CAP 0

create-glyph 'Theta' : glyph-construction
	assign-unicode 0x398
	include capitalMarks
	include glyphs.O AS_BASE
	include : HBar (SB + STROKE * CORRECTION_HX - O * 5) (RIGHTSB - STROKE * CORRECTION_HX + O * 5) CAPMIDDLE

create-glyph 'Xi' : glyph-construction
	assign-unicode 0x39E
	include capitalMarks
	include : HBar [mix SB RIGHTSB 0.15] [mix RIGHTSB SB 0.15] [mix 0 CAP 0.54]
	include : HBar SB RIGHTSB (CAP - HALFSTROKE)
	include : HBar SB RIGHTSB (0 + HALFSTROKE)

define [PiShape top bottom shrink _fine] : glyph-construction
	local fine : fallback _fine STROKE
	include : HBar SB RIGHTSB (top - (fine / 2)) fine
	include : VBar ([mix SB RIGHTSB [fallback shrink 0.05]] + (fine / 2)) bottom (top - fine / 2) fine
	include : VBar ([mix RIGHTSB SB [fallback shrink 0.05]] - (fine / 2)) bottom (top - fine / 2) fine

create-glyph 'Pi' : glyph-construction
	assign-unicode 0x3A0
	include capitalMarks
	include : PiShape CAP 0

create-glyph 'pi' : glyph-construction
	assign-unicode 0x3C0
	include eMarks
	include : PiShape XH 0

create-glyph 'Phi' : glyph-construction
	assign-unicode 0x3A6
	include capitalMarks
	local y1 : CAP * 0.125
	local y2 : CAP * 0.875
	include : VBar MIDDLE 0 (y1 + HALFSTROKE)
	include : smallo y2 y1 SB RIGHTSB MVERTSTROKE SMOOTHA SMOOTHB
	include : VBar MIDDLE y1 y2 MVERTSTROKE
	include : VBar MIDDLE (y2 - HALFSTROKE) CAP

create-glyph 'Psi' : glyph-construction
	assign-unicode 0x3A8
	include capitalMarks
	local y : CAP * 0.25
	include : spiro
		widths.lhs MVERTSTROKE
		flat SB CAP [heading DOWNWARD]
		curl SB (y + SMOOTHB)
		arcvh
		g4   MIDDLE y [heading RIGHTWARD]
		archv
		flat RIGHTSB (y + SMOOTHA)
		curl RIGHTSB CAP [heading UPWARD]
	include : VBar MIDDLE y CAP MVERTSTROKE
	include : VBar MIDDLE 0 (y + HALFSTROKE)

define [OmegaShape top sma smb ssma ssmb] : glyph-construction
	local fine : STROKE * 0.4
	include : spiro
		g4 [mix SB RIGHTSB 0.4] STROKE [widths.heading fine 0 LEFTWARD]
		archv
		flat SB ssmb [widths 0 STROKE]
		curl SB (top - sma)
		arcvh
		g4   (MIDDLE - CORRECTION_OMIDS) (top - O)
		archv
		flat RIGHTSB (top - smb)
		curl RIGHTSB ssma
		arcvh
		g4   [mix RIGHTSB SB 0.4] STROKE [widths.heading fine 0 LEFTWARD]
	include : HBar SB [mix SB RIGHTSB 0.4] HALFSTROKE
	include : HBar [mix RIGHTSB SB 0.4] RIGHTSB HALFSTROKE

create-glyph 'Omega' : glyph-construction
	assign-unicode 0x3A9
	include capitalMarks
	include : OmegaShape CAP SMOOTHA SMOOTHB SMALLSMOOTHA SMALLSMOOTHB

# Lowercase
create-glyph 'alpha' : glyph-construction
	set-width WIDTH
	assign-unicode 0x3B1
	include eMarks
	
	local middle : mix SB RIGHTSB 0.5
	local fine   : adviceBlackness 3.5
	local k1 0.25
	local k2 0.5
	local k3 0.35
	include : spiro
		widths.rhs fine
		g4   (RIGHTSB - O) XH [heading DOWNWARD]
		bezcontrols k1 k2 k3 1
		g4   (middle + CORRECTION_OMIDS) O [widths 0 STROKE]
		flat (SB + O) SMALLSMOOTHB
		curl (SB + O) (XH - SMALLSMOOTHA)
		g4   (middle - CORRECTION_OMIDS) XO [widths 0 STROKE]
		bezcontrols (1 - k3) 0 (1 - k1) (1 - k2)
		g4   (RIGHTSB - O) 0 [widths.heading 0 fine DOWNWARD]

define [IotaShape top] : glyph-construction
	local middle MIDDLE
	set-anchor 'above' BASE middle top
	include : leftwardTopSerif middle top LONGJUT
	include : spiro
		widths.center
		flat middle top [heading DOWNWARD]
		curl middle HOOK
		arcvh
		flat (middle + HOOK - HALFSTROKE) HALFSTROKE
		curl (middle + LONGJUT * 1.05) HALFSTROKE [heading RIGHTWARD]

create-glyph 'iota' : glyph-construction
	assign-unicode 0x3B9
	include eMarks
	include : IotaShape XH

create-glyph 'eta' : glyph-construction
	assign-unicode 0x3B7
	include pMarks
	set-anchor 'lf' BASE (SB + HALFSTROKE) 0
	
	include : nShoulder (SB + STROKE * CORRECTION_HX) RIGHTSB (STROKE * 0.3) XH DESCENDER SMALLSMOOTHA SMALLSMOOTHB
	include : VBarLeft SB 0 XH

create-glyph 'kappa' : glyph-construction
	set-width WIDTH
	assign-unicode 0x3BA
	include eMarks
	include : create-stroke
		:.start-from SB 0
		:.set-width  0 STROKE
		:.heads-to   UPWARD
		:.line-to    SB XH
		:.heads-to   UPWARD
	include : SmallKShape

create-glyph 'lambda' : glyph-construction
	assign-unicode 0x3BB
	include bMarks
	
	local xTop : mix SB RIGHTSB 0.28
	local turnp : XH / (XH - DESCENDER)
	local xb : mix SB RIGHTSB 0.51
	local yb : mix XH 0 (0.05 * turnp)
	
	include : xStrand xTop CAP RIGHTSB 0 0.1 0.6 0.14
	include : halfXStrand SB 0 xb yb (0.1 * turnp) 0.4 (0.14 * turnp)

create-glyph 'mu' : glyph-construction
	set-width WIDTH
	assign-unicode 0x3BC
	include pMarks
	include glyphs.u
	include : create-stroke
		:.start-from SB DESCENDER
		:.heads-to   UPWARD
		:.set-width  0 STROKE
		:.line-to    SB (DESCENDER / 2)
		:.heads-to   UPWARD
		:.line-to    SB SMALLSMOOTHB
		:.heads-to   UPWARD
		:.set-width  0 [adviceBlackness 4]

create-glyph 'theta' : glyph-construction
	assign-unicode 0x3B8
	include bMarks
	include : smallo CAP 0 (SB - O) (RIGHTSB + O) STROKE (SMALLSMOOTHA * 100) (SMALLSMOOTHB * 100)
	include : HBar (SB + HALFSTROKE) (RIGHTSB - HALFSTROKE) CAPMIDDLE

create-glyph 'beta' : glyph-construction
	assign-unicode 0x3B2
	include ifMarks
	local ymiddle : [mix 0 CAP 0.55] - HALFSTROKE
	include : spiro
		widths.rhs
		flat SB DESCENDER [heading UPWARD]
		curl SB (CAP - SMALLSMOOTHA)
		arcvh
		g4   [mix SB (RIGHTSB + O * 2) 0.5] CAPO
		archv
		g4   (RIGHTSB + O * 2) [mix CAP ymiddle 0.5]
		arcvh
		flat [mix SB (RIGHTSB + O * 2) 0.5] ymiddle
		curl [mix SB RIGHTSB 0.3] ymiddle
	include : spiro
		widths.rhs
		g4   (RIGHTSB - ymiddle / 2 - HALFSTROKE) (ymiddle + STROKE)
		archv
		g4   (RIGHTSB - O) [mix 0 (ymiddle + STROKE) 0.5]
		arcvh
		flat (RIGHTSB - ymiddle / 2 - HALFSTROKE) 0
		curl (SB + HALFSTROKE) 0 [heading LEFTWARD]


create-glyph 'gamma' : glyph-construction
	assign-unicode 0x3B3
	include pMarks
	local x0 : mix MIDDLE SB 0.33
	local y0 : mix 0 XH 0.8
	local y1 : mix 0 XH 0.3
	local y2 0
	local xmid : [mix SB RIGHTSB 0.46] + HALFSTROKE
	include : create-stroke
		:.start-from (SB + 0.4 * STROKE * CORRECTION_HX) XH
		:.set-width  0 STROKE
		:.cubic-to   x0 y0 xmid y1 xmid y2
		:.heads-to   DOWNWARD
		:.line-to    xmid DESCENDER
		:.heads-to   DOWNWARD

	local turn : mix 0 XH 0.9
	include : create-stroke
		:.start-from RIGHTSB XH
		:.heads-to   DOWNWARD
		:.set-width  0 STROKE
		:.line-to    RIGHTSB turn
		:.heads-to   DOWNWARD
		:.curve-to   RIGHTSB ((1 - 0.27) * turn) xmid y2


create-glyph 'delta' : glyph-construction
	assign-unicode 0x3B4
	include bMarks
	
	local xNeck : mix SB RIGHTSB 0.07
	local bar : mix 0 XH 0.96
	local xOTLeft : mix SB RIGHTSB 0.5
	local fine : STROKE * 0.5
	
	local sma : SMALLSMOOTHA * bar / XH
	local smb : SMALLSMOOTHB * bar / XH
	
	include : spiro
		widths.rhs
		g4   [mix MIDDLE RIGHTSB 0.85] ([mix XH CAP 0.8] - STROKE) [heading LEFTWARD]
		alsothru 0.5 0.7
		g4   MIDDLE (CAPO - STROKE)
		archv 2
		g4   (xNeck + STROKE) [mix (CAPO - STROKE) bar 0.5]
		arcvh 2
		g4   xOTLeft bar [heading RIGHTWARD]
		alsothruthem : list {0.25 0.05} {0.5 0.13}
		flat (RIGHTSB - O) (bar - smb)
		curl (RIGHTSB - O) sma
		arcvh 16
		g4   (MIDDLE + CORRECTION_OMIDS) O
		archv
		flat (SB + O) smb
		curl (SB + O) (bar - sma)
		arcvh
		g4   xOTLeft (bar - (STROKE - fine) / 2) [widths 0 fine]

define [SmallEpsilonShape top hook] : glyph-construction
	local midx : mix SB RIGHTSB 0.65
	local midy : top * BARPOS
	local sma : top - [mix (midy + HALFSTROKE) (top - O - STROKE) (SMOOTHB / (SMOOTHA + SMOOTHB))]
	local smb : mix (STROKE + O) (midy - HALFSTROKE) (SMOOTHB / (SMOOTHA + SMOOTHB))
	include : spiro
		widths.lhs
		g4 RIGHTSB (top - [fallback hook SHOOK])
		hookstart top
		g4 SB (top - sma)
		arcvh
		flat MIDDLE (midy - HALFSTROKE)
		curl midx (midy - HALFSTROKE) [heading RIGHTWARD]
	include : spiro
		widths.rhs
		g4 RIGHTSB [fallback hook SHOOK]
		hookstart 0
		g4 SB smb
		arcvh
		flat MIDDLE (midy + HALFSTROKE)
		curl midx (midy + HALFSTROKE) [heading RIGHTWARD]

create-glyph 'epsilon' : glyph-construction
	assign-unicode 0x3B5
	include eMarks
	include : SmallEpsilonShape XH

create-glyph 'zeta' : glyph-construction
	assign-unicode 0x3B6
	include ifMarks
	include : HBar SB (RIGHTSB + O) (CAP - HALFSTROKE)
	include : spiro
		widths.rhs
		g4 (RIGHTSB + O) (CAP - STROKE)
		bezcontrols 0.7 0.37 1 0.62
		g4 (SB + STROKE * CORRECTION_HX) [mix 0 CAP 0.27]
		alsothru 0.5 0.8
		g4 [mix SB RIGHTSB 0.5] STROKE
		alsothru 0.5 0.135
		g4 RIGHTSB [mix DESCENDER STROKE 0.51]
		g4 RIGHTSB [mix DESCENDER STROKE 0.49]
		#arcvh
		flat (RIGHTSB - (STROKE - [mix DESCENDER STROKE 0.5]) * 1.1) DESCENDER
		curl [mix SB RIGHTSB 0.5] DESCENDER [heading LEFTWARD]

create-glyph 'xi' : glyph-construction
	assign-unicode 0x3BE
	include ifMarks
	include : HBar SB (RIGHTSB + O) (CAP - HALFSTROKE)
	
	local xbar : mix SB RIGHTSB 0.85
	local ybar : mix 0 CAP 0.55
	include : spiro
		widths.rhs
		g4 xbar (CAP - STROKE)
		archv
		g4 (SB - O * 2 + STROKE * CORRECTION_HX) [mix (CAP - STROKE) ybar 0.6]
		arcvh
		g4 xbar ybar
	include : spiro
		widths.rhs
		g4 xbar (ybar - STROKE)
		bezcontrols 0.7 0 1 0.63
		g4 (SB + STROKE * CORRECTION_HX) [mix 0 ybar 0.45]
		arcvh
		g4 [mix SB RIGHTSB 0.5] STROKE
		archv
		g4 RIGHTSB [mix DESCENDER STROKE 0.5]
		arcvh
		flat (RIGHTSB - (STROKE - [mix DESCENDER STROKE 0.5]) * 1.1) DESCENDER
		curl [mix SB RIGHTSB 0.5] DESCENDER [heading LEFTWARD]

create-glyph 'nu' : glyph-construction
	assign-unicode 0x3BD
	include eMarks
	
	local x0 : mix MIDDLE SB 0.33
	local y0 : mix 0 XH 0.8
	local y1 : mix 0 XH 0.16
	local y2 0
	local xmid : MIDDLE + HALFSTROKE * 0.75
	include : create-stroke
		:.start-from (SB + 0.4 * STROKE * CORRECTION_HX) XH
		:.set-width  0 STROKE
		:.cubic-to   x0 y0 xmid y1 xmid y2
		:.heads-to   DOWNWARD

	local turn : mix 0 XH 0.9
	include : create-stroke
		:.start-from RIGHTSB XH
		:.heads-to   DOWNWARD
		:.set-width  0 STROKE
		:.line-to    RIGHTSB turn
		:.heads-to   DOWNWARD
		:.curve-to   RIGHTSB ((1 - 0.27) * turn) xmid y2

create-glyph 'sigmafinal' : glyph-construction
	assign-unicode 0x3C2
	include pMarks
	include : spiro
		widths.lhs
		g4 RIGHTSB (XH - HOOK)
		hookstart XH
		flat SB (XH - SMALLSMOOTHA)
		curl SB SMALLSMOOTHB
		alsothru 0.4 0.8
		g4 MIDDLE 0
		alsothru 0.5 0.135
		g4 (RIGHTSB - STROKE * CORRECTION_HX) [mix DESCENDER STROKE 0.5]
		arcvh
		flat (RIGHTSB - (STROKE - [mix DESCENDER STROKE 0.5]) * 1.1) (DESCENDER + STROKE)
		curl MIDDLE (DESCENDER + STROKE) [heading LEFTWARD]

create-glyph 'upsilon' : glyph-construction
	assign-unicode 0x3C5
	include eMarks
	include : spiro
		widths.lhs
		flat SB XH [heading DOWNWARD]
		curl SB SMALLSMOOTHB
		arcvh
		g4   (MIDDLE + CORRECTION_OMIDS) O
		archv
		flat RIGHTSB SMALLSMOOTHA
		curl RIGHTSB XH [heading UPWARD]

create-glyph 'tau' : glyph-construction
	assign-unicode 0x3C4
	include eMarks
	include : HBar SB RIGHTSB (XH - HALFSTROKE)
	include : VBar MIDDLE 0 XH

create-glyph 'rho' : glyph-construction
	assign-unicode 0x3C1
	include pMarks
	include glyphs.o
	include : VBar (SB + HALFSTROKE * CORRECTION_HX + O) DESCENDER SMALLSMOOTHB

create-glyph 'sigma' : glyph-construction
	assign-unicode 0x3C3
	include eMarks
	start-from (RIGHTSB + 0.25 * SB) XH
	line-to    (RIGHTSB + 0.25 * SB) (XH - STROKE)
	line-to    MIDDLE  (XH - STROKE - O * 1.5)
	line-to    MIDDLE  (XH - O)
	include : spiro
		widths.lhs
		flat (MIDDLE + 1) (XH - O)
		curl MIDDLE (XH - O)
		archv
		flat SB (XH - SMALLSMOOTHA)
		curl SB SMALLSMOOTHB
		arcvh
		g4   (MIDDLE + CORRECTION_OMIDS) O
		archv
		flat RIGHTSB SMALLSMOOTHA
		curl RIGHTSB (XH - SMALLSMOOTHB)
		arcvh
		flat MIDDLE (XH - HALFSTROKE - O) [widths HALFSTROKE 0]
		curl (MIDDLE - 1) (XH - HALFSTROKE - O)

create-glyph 'omega' : glyph-construction
	assign-unicode 0x3C9
	include eMarks
	local fine : adviceBlackness 3.25
	local x0 : mix SB RIGHTSB 0.1
	local y0 : XH - STROKE * 0.2
	local y1 : mix 0 XH 0.8
	local x1 : SB + O *2
	local y3 : XH / 2
	local y4 : XH * 0.65
	
	include : spiro
		widths.lhs fine
		g4 x0 y0
		g4 x1 (XH / 2)
		arcvh 8
		g4 [mix x1 (MIDDLE + fine / 2 * CORRECTION_HX) 0.5] O [heading RIGHTWARD]
		archv 8
		flat (MIDDLE + fine / 2 * CORRECTION_HX) y3 [heading UPWARD]
		curl (MIDDLE + fine / 2 * CORRECTION_HX) y4 [heading UPWARD]
	include : spiro
		widths.rhs fine
		g4 (WIDTH - x0) y0
		g4 (WIDTH - x1) (XH / 2)
		arcvh 8
		g4 [mix (WIDTH - x1) (MIDDLE - fine / 2 * CORRECTION_HX) 0.5] O [heading LEFTWARD]
		archv 8
		flat (MIDDLE - fine / 2 * CORRECTION_HX) y3 [heading UPWARD]
		curl (MIDDLE - fine / 2 * CORRECTION_HX) y4 [heading UPWARD]


create-glyph 'varphi' : glyph-construction
	assign-unicode 0x3D5
	include ifMarks
	local y1 0
	local y2 XH
	include : VBar MIDDLE DESCENDER (y1 + HALFSTROKE)
	include : smallo y2 y1 SB RIGHTSB MVERTSTROKE
	include : VBar MIDDLE y1 y2 MVERTSTROKE
	include : VBar MIDDLE (y2 - HALFSTROKE) CAP

create-glyph 'taillessphi' : glyph-construction
	assign-unicode 0x2C77
	include eMarks
	local x0 : mix SB RIGHTSB 0.1
	local y1 : mix 0 XH 0.75
	local x1 : SB + O * 2
	local y3 : XH * 0.66
	local y4 : XH * 0.65
	include : spiro
		widths.lhs MVERTSTROKE
		g4 x0 XH
		g4 x1 (XH / 2)
		arcvh
		g4 (MIDDLE + CORRECTION_OMIDS) O
		archv
		g4 (WIDTH - x1) (XH / 2)
		arcvh 8
		g4 [mix (WIDTH - x1) (MIDDLE - MVERTSTROKE / 2 * CORRECTION_HX) 0.6] XH [heading {.x 0.1 .y (-1)}]
		archv
		flat (MIDDLE - MVERTSTROKE / 2 * CORRECTION_HX) y3
		curl (MIDDLE - MVERTSTROKE / 2 * CORRECTION_HX) 0 [heading DOWNWARD]

create-glyph 'phi' : glyph-construction
	assign-unicode 0x3C6
	include pMarks
	include glyphs.taillessphi
	include : VBar MIDDLE DESCENDER (MVERTSTROKE * 0.2)


create-glyph 'psi' : glyph-construction
	assign-unicode 0x3C8
	include ifMarks
	local fine : adviceBlackness 3.5
	include : spiro
		widths.lhs fine
		flat SB XH [heading DOWNWARD]
		curl SB SMALLSMOOTHB
		arcvh
		g4   MIDDLE O [heading RIGHTWARD]
		archv
		flat RIGHTSB SMALLSMOOTHA
		curl RIGHTSB XH [heading UPWARD]
	include : VBar MIDDLE 0 CAP fine
	include : VBar MIDDLE DESCENDER HALFSTROKE

create-glyph 'chi' : glyph-construction
	set-width WIDTH
	assign-unicode 0x3C7
	include pMarks
	
	include : xStrand SB DESCENDER RIGHTSB XH 0.05 0.4 0.1
	include : xStrand SB XH RIGHTSB DESCENDER 0.05 0.4 0.1


# Variant letters
create-glyph 'pomega' : glyph-construction
	assign-unicode 0x3D6
	include glyphs.omega AS_BASE
	include : HBar SB RIGHTSB (XH - HALFSTROKE)


### Polytonic symbols
define [GreekLRDoubleMark id unicode leftGlyph rightGlyph] : begin
	create-glyph id : glyph-construction
		set-width 0
		local k : -WIDTH * 0.15
		
		include leftGlyph
		apply-transform : Translate (2 * k) 0
		include rightGlyph
		apply-transform : Translate (0 - k) 0
		
		set-anchor 'above' MARK markMiddle XH markMiddle aboveMarkTop
	create-glyph ('spaced_' + id) : glyph-construction
		assign-unicode unicode
		include glyphs.space AS_BASE
		include glyphs.(id)

GreekLRDoubleMark 'psilivaria' 0x1FCD glyphs.commaAbove glyphs.variaAbove
GreekLRDoubleMark 'psilioxia'  0x1FCE glyphs.commaAbove glyphs.oxiaAbove
GreekLRDoubleMark 'dasiavaria' 0x1FDD glyphs.revCommaAbove glyphs.variaAbove
GreekLRDoubleMark 'dasiaoxia'  0x1FDE glyphs.revCommaAbove glyphs.oxiaAbove

create-glyph 'psiliperispomeni' : glyph-construction
	set-width 0
	include glyphs.commaAbove
	local yc : XH + ACCENT + DOTRADIUS * 0.25
	local radius : [adviceBlackness 6] * 1.5
	include : create-stroke
		:.start-from (markMiddle - radius) yc
		:.heads-to   UPWARD
		:.set-width  ([adviceBlackness 6.5] * 1.25) 0
		:.arc-vh-to  markMiddle (yc + radius)
		:.arc-hv-to  (markMiddle + radius) yc
		:.heads-to   DOWNWARD
	set-anchor 'above' MARK markMiddle XH markMiddle (aboveMarkTop + markHalfStroke * 2)

create-glyph 'spaced_psiliperispomeni' : glyph-construction
	assign-unicode 0x1FCF
	include glyphs.space AS_BASE
	include glyphs.psiliperispomeni

create-glyph 'dasiaperispomeni' : glyph-construction
	set-width 0
	include glyphs.revCommaAbove
	local yc : XH + ACCENT + DOTRADIUS * 0.25
	local radius : [adviceBlackness 6] * 1.5
	include : create-stroke
		:.start-from (markMiddle - radius) yc
		:.heads-to   UPWARD
		:.set-width  ([adviceBlackness 6.5] * 1.25) 0
		:.arc-vh-to  markMiddle (yc + radius)
		:.arc-hv-to  (markMiddle + radius) yc
		:.heads-to   DOWNWARD
	set-anchor 'above' MARK markMiddle XH markMiddle (aboveMarkTop + markHalfStroke * 2)

create-glyph 'spaced_dasiaperispomeni' : glyph-construction
	assign-unicode 0x1FDF
	include glyphs.space AS_BASE
	include glyphs.dasiaperispomeni
