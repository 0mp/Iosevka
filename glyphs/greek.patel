###### Monotonic greek

# Aliases
alias 'Alpha' 0x391 'A'
alias 'Beta' 0x392 'B'
alias 'Epsilon' 0x395 'E'
alias 'Zeta' 0x396 'Z'
alias 'Eta' 0x397 'H'
alias 'Iota' 0x399 'I'
alias 'Kappa' 0x39A 'K'
alias 'Mu' 0x39C 'M'
alias 'Nu' 0x39D 'N'
alias 'Omicron' 0x39F 'O'
alias 'Rho' 0x3A1 'P'
alias 'Tau' 0x3A4 'T'
alias 'Upsilon' 0x3A5 'Y'
alias 'Chi' 0x3A7 'X'
alias 'omicron' 0x3BF 'o'

# Capital
create-glyph 'Lambda' : glyph-construction {
	assign-unicode 0x39B
	include capitalMarks
	
	local TURN [XH * 0.1]
	local curviness 0.1
	include : create-stroke
		:.start-from SB 0
		:.heads-to   UPWARD
		:.set-width  0 STROKE
		:.line-to    SB TURN
		:.heads-to   UPWARD
		:.curve-to   SB [mix TURN CAP curviness] [MIDDLE - STROKE / 2] CAP
		:.set-width  0 [STROKE * 0.8]
	
	include : create-stroke
		:.start-from RIGHTSB 0
		:.heads-to   UPWARD
		:.set-width  STROKE 0
		:.line-to    RIGHTSB TURN
		:.heads-to   UPWARD
		:.curve-to   RIGHTSB [mix TURN CAP curviness] [MIDDLE + STROKE / 2] CAP
		:.set-width  [STROKE * 0.8] 0
	
	start-from [MIDDLE - STROKE / 2] CAP
	line-to [MIDDLE + STROKE / 2] CAP
	line-to MIDDLE [CAP - STROKE]
}
create-glyph 'Delta' : glyph-construction {
	assign-unicode 0x394
	include glyphs.Lambda AS_BASE
	include : HBar [SB + HALFSTROKE] [RIGHTSB - HALFSTROKE] HALFSTROKE
}
create-glyph 'Gamma' : glyph-construction {
	assign-unicode 0x393
	include glyphs.L AS_BASE
	include : FlipAround MIDDLE CAPMIDDLE 1 [-1]
}
create-glyph 'Sigma' : glyph-construction {
	set-width WIDTH
	assign-unicode 0x3A3
	include capitalMarks
	
	local cor 1.15
	
	include : create-stroke :.start-from SB CAP :.heads-to RIGHTWARD :.set-width 0 STROKE
		:.line-to RIGHTSB CAP :.heads-to RIGHTWARD
	include : create-stroke :.start-from SB 0 :.heads-to RIGHTWARD :.set-width STROKE 0
		:.line-to RIGHTSB 0 :.heads-to RIGHTWARD
	
	local midx : mix SB RIGHTSB 0.4
	start-from SB STROKE
	line-to [SB + STROKE * cor] STROKE
	line-to [midx + STROKE * cor] CAPMIDDLE
	line-to [SB + STROKE * cor] [CAP - STROKE]
	line-to SB [CAP - STROKE]
	line-to midx CAPMIDDLE
	reverse-last
}
create-glyph 'Theta' : glyph-construction {
	assign-unicode 0x398
	include capitalMarks
	include glyphs.O AS_BASE
	include : HBar [SB + STROKE - O * 5] [RIGHTSB - STROKE + O * 5] CAPMIDDLE
}
create-glyph 'Xi' : glyph-construction {
	assign-unicode 0x39E
	include capitalMarks
	include : HBar [mix SB RIGHTSB 0.15] [mix RIGHTSB SB 0.15] [mix 0 CAP 0.54]
	include : HBar SB RIGHTSB [CAP - HALFSTROKE]
	include : HBar SB RIGHTSB [0 + HALFSTROKE]
}
create-glyph 'Pi' : glyph-construction {
	assign-unicode 0x3A0
	include capitalMarks
	include : HBar SB RIGHTSB [CAP - HALFSTROKE]
	include : VBar [[mix SB RIGHTSB 0.1] + HALFSTROKE] 0 CAP
	include : VBar [[mix RIGHTSB SB 0.1] - HALFSTROKE] 0 CAP
}
create-glyph 'Phi' : glyph-construction {
	assign-unicode 0x3A6
	include capitalMarks
	local fine : adviceBlackness 3.5
	local y1 : CAP * 0.125
	local y2 : CAP * 0.875
	include : VBar MIDDLE 0 [y1 + HALFSTROKE]
	include : smallo y2 y1 SB RIGHTSB fine SMOOTHA SMOOTHB
	include : VBar MIDDLE y1 y2 fine
	include : VBar MIDDLE [y2 - HALFSTROKE] CAP
}
create-glyph 'Psi' : glyph-construction {
	assign-unicode 0x3A8
	include capitalMarks
	local fine : adviceBlackness 3.5
	local y : CAP * 0.25
	include : create-stroke
		:.start-from SB CAP
		:.heads-to   DOWNWARD
		:.set-width  fine 0
		:.line-to    SB [y + SMOOTHB]
		:.arc-vh-to  MIDDLE y
		:.heads-to   RIGHTWARD
		:.arc-hv-to  RIGHTSB [y + SMOOTHA]
		:.line-to    RIGHTSB CAP
		:.heads-to   UPWARD
	include : VBar MIDDLE y CAP fine
	include : VBar MIDDLE 0 [y + HALFSTROKE]
}
create-glyph 'Omega' : glyph-construction {
	assign-unicode 0x3A9
	include capitalMarks
	local fine : STROKE * 0.4
	include : create-stroke
		:.start-from [mix SB RIGHTSB 0.4] STROKE
		:.set-width  fine 0
		:.heads-to   LEFTWARD
		:.arc-hv-to  [SB + STROKE * ITALICCOR] SMALLSMOOTHB
		:.set-width  STROKE 0
		:.line-to    [SB + STROKE * ITALICCOR] [CAP - SMOOTHA]
		:.arc-vh-to  MIDDLE [CAP - STROKE]
		:.heads-to   RIGHTWARD
		:.arc-hv-to  [RIGHTSB - STROKE * ITALICCOR] [CAP - SMOOTHB]
		:.line-to    [RIGHTSB - STROKE * ITALICCOR] SMALLSMOOTHA
		:.arc-vh-to  [mix RIGHTSB SB 0.4] STROKE
		:.set-width  fine 0
		:.heads-to   LEFTWARD
	
	include : HBar SB [mix SB RIGHTSB 0.4] HALFSTROKE
	include : HBar [mix RIGHTSB SB 0.4] RIGHTSB HALFSTROKE
}
# Lowercase
create-glyph 'alpha' : glyph-construction {
	set-width WIDTH
	assign-unicode 0x3B1
	include eMarks
	
	local middle : mix SB RIGHTSB 0.425
	local cx     : mix SB RIGHTSB 0.7
	local cy     : mix 0  XH      0.3
	local cx2    : mix SB RIGHTSB 0.625
	local fine   : adviceBlackness 3.5
	include : create-stroke
		:.start-from [RIGHTSB - fine * ITALICCOR - O] XH
		:.heads-to   DOWNWARD
		:.set-width  fine 0
		:.cubic-to   cx cy cx2 [O + STROKE] middle [O + STROKE]
		:.set-width  STROKE 0
		:.arc-hv-to  [SB + STROKE * ITALICCOR + O] SMALLSMOOTHB
		:.line-to    [SB + STROKE * ITALICCOR + O] [XH - SMALLSMOOTHA]
		:.arc-vh-to  middle [XO - STROKE]
		:.set-width  STROKE 0
		:.cubic-to   cx2 [XO - STROKE] cx [XH - cy] [RIGHTSB - fine * ITALICCOR - O] 0
		:.set-width  fine 0
		:.heads-to   DOWNWARD
}
create-glyph 'iota' : glyph-construction {
	assign-unicode 0x3B9
	include eMarks
	local middle MIDDLE
	set-anchor 'above' BASE middle XH
	include : leftwardTopSerif middle XH LONGJUT
	include : create-stroke
		:.start-from middle HOOK
		:.heads-to UPWARD
		:.set-width HALFSTROKE HALFSTROKE
		:.line-to middle XH
		:.heads-to UPWARD
	
	include : VerticalHook middle HOOK [HOOK * 1.2] [HOOK * 0.75]
}
create-glyph 'eta' : glyph-construction {
	assign-unicode 0x3B7
	include pMarks
	set-anchor 'lf' BASE [SB + HALFSTROKE] 0
	
	include : nBowl [SB + STROKE] MIDDLE RIGHTSB [STROKE * 0.3] XH DESCENDER SMALLSMOOTHA SMALLSMOOTHB
	include : VBar [SB + HALFSTROKE * ITALICCOR] 0 XH
}
create-glyph 'kappa' : glyph-construction {
	set-width WIDTH
	assign-unicode 0x3BA
	include eMarks
	include : create-stroke 
		:.start-from SB 0
		:.set-width  0 STROKE
		:.heads-to   UPWARD
		:.line-to    SB XH
		:.heads-to   UPWARD
	include : SmallKShape
}
create-glyph 'lambda' : glyph-construction {
	assign-unicode 0x3BB
	include bMarks
	
	local xTop : mix SB RIGHTSB 0.28
	local turnp : XH / [XH - DESCENDER]
	local xb : mix SB RIGHTSB 0.51
	local yb : mix XH 0 [0.05 * turnp]
	
	include : xStrand xTop CAP RIGHTSB 0 0.1 0.6 0.14
	include : halfXStrand SB 0 xb yb [0.1 * turnp] 0.4 [0.14 * turnp]
}
create-glyph 'mu' : glyph-construction {
	set-width WIDTH
	assign-unicode 0x3BC
	include pMarks
	include glyphs.u
	include : create-stroke
		:.start-from SB DESCENDER
		:.heads-to   UPWARD
		:.set-width  0 STROKE
		:.line-to    SB [DESCENDER / 2]
		:.heads-to   UPWARD
		:.line-to    SB SMALLSMOOTHB
		:.heads-to   UPWARD
		:.set-width  0 [adviceBlackness 4]
}
create-glyph 'theta' : glyph-construction {
	assign-unicode 0x3B8
	include bMarks
	include : smallo CAP 0 [SB - O] [RIGHTSB + O] STROKE [SMALLSMOOTHA * 100] [SMALLSMOOTHB * 100]
	include : HBar [SB + HALFSTROKE] [RIGHTSB - HALFSTROKE] CAPMIDDLE
}
create-glyph 'beta' : glyph-construction {
	assign-unicode 0x3B2
	include ifMarks
	local ymiddle : [mix 0 CAP 0.55] - HALFSTROKE
	include : create-stroke
		:.start-from SB DESCENDER
		:.set-width  0 STROKE
		:.line-to    SB [CAP - SMALLSMOOTHA]
		:.arc-vh-to  [mix SB [RIGHTSB + O * 2] 0.5] CAPO
		:.arc-hv-to  [RIGHTSB + O * 2] [mix CAP ymiddle 0.5]
		:.arc-vh-to  [mix SB [RIGHTSB + O * 2] 0.5] ymiddle
		:.line-to    [mix SB RIGHTSB 0.3] ymiddle
	
	include : create-stroke
		:.start-from [RIGHTSB - ymiddle / 2 - HALFSTROKE] [ymiddle + STROKE]
		:.set-width  0 STROKE
		:.arc-hv-to  [RIGHTSB - O] [mix 0 [ymiddle + STROKE] 0.5]
		:.arc-vh-to  [RIGHTSB - ymiddle / 2 - HALFSTROKE] 0
		:.line-to    [SB + HALFSTROKE] 0
		:.heads-to   LEFTWARD
}

create-glyph 'gamma' : glyph-construction {
	assign-unicode 0x3B3
	include pMarks
	local x0 : mix MIDDLE SB 0.33
	local y0 : mix 0 XH 0.8
	local y1 : mix 0 XH 0.3
	local y2 0
	local xmid : [mix SB RIGHTSB 0.46] + HALFSTROKE
	include : create-stroke
		:.start-from [SB + 0.4 * STROKE * ITALICCOR] XH
		:.set-width  0 STROKE
		:.cubic-to   x0 y0 xmid y1 xmid y2
		:.heads-to   DOWNWARD
		:.line-to    xmid DESCENDER
		:.heads-to   DOWNWARD

	local turn : mix 0 XH 0.9
	include : create-stroke
		:.start-from RIGHTSB XH
		:.heads-to   DOWNWARD
		:.set-width  0 STROKE
		:.line-to    RIGHTSB turn
		:.heads-to   DOWNWARD
		:.curve-to   RIGHTSB [[1 - 0.27] * turn] xmid y2
}

create-glyph 'delta' : glyph-construction {
	assign-unicode 0x3B4
	include bMarks
	
	local xNeck : mix SB RIGHTSB 0.125
	local bar : mix 0 XH 0.96
	local xOTLeft : mix SB RIGHTSB 0.5
	local fine : STROKE * 0.5
	
	include : create-stroke
		:.start-from [mix MIDDLE RIGHTSB 0.85] [mix XH CAP 0.8]
		:.heads-to   LEFTWARD
		:.set-width  STROKE 0
		:.curve-to   [mix MIDDLE RIGHTSB 0.66] CAPO MIDDLE CAPO
		:.arc-hv-to  xNeck [mix CAPO [bar - STROKE] 0.5]
		:.arc-vh-to  xOTLeft [bar - STROKE]
		:.heads-to   RIGHTWARD
		:.arc-hv-to  [RIGHTSB - STROKE * ITALICCOR - O] [bar - SMALLSMOOTHB]
		:.line-to    [RIGHTSB - STROKE * ITALICCOR - O] SMALLSMOOTHA
		:.arc-vh-to  MIDDLE [STROKE + O]
		:.heads-to   LEFTWARD
		:.arc-hv-to  [SB + STROKE * ITALICCOR] SMALLSMOOTHB
		:.line-to    [SB + STROKE * ITALICCOR] [bar - SMALLSMOOTHA]
		:.arc-vh-to  xOTLeft [bar - STROKE]
		:.set-width  fine 0
}

create-glyph 'epsilon' : glyph-construction {
	assign-unicode 0x3B5
	include eMarks
	
	local mid : mix SB RIGHTSB 0.65
	include : sHookUpper XH [SMOOTHA * 0.87] SHOOK
	include : XSHookLower 0 [RIGHTSB - OXHOOK + TAILADJX * globalTransform.yx] MIDDLE SB [SMOOTHB * 0.87] [SHOOK - TAILADJY * globalTransform.yx]
	include : create-stroke
		:.start-from SB [XH - SMOOTHA * 0.87]
		:.set-width  STROKE 0
		:.arc-vh-to  MIDDLE [XH / 2 - HALFSTROKE] KAPPA
		:.line-to    mid [XH / 2 - HALFSTROKE]
		:.heads-to   RIGHTWARD
	include : create-stroke
		:.start-from SB [SMOOTHB * 0.87]
		:.set-width  0 STROKE
		:.arc-vh-to  MIDDLE [XH / 2 + HALFSTROKE] KAPPA
		:.line-to    mid [XH / 2 + HALFSTROKE]
		:.heads-to   RIGHTWARD
}
create-glyph 'zeta' : glyph-construction {
	assign-unicode 0x3B6
	include ifMarks
	include : HBar SB [RIGHTSB + O] [CAP - HALFSTROKE]
	include : create-stroke
		:.start-from [RIGHTSB + O] [CAP - STROKE]
		:.set-width  0 STROKE
		:.cubic-to   [mix SB RIGHTSB 0.3] [mix 0 CAP 0.66] [SB + STROKE * ITALICCOR] [mix 0 CAP 0.4] [SB + STROKE * ITALICCOR] [mix 0 CAP 0.25]
		:.arc-vh-to  [mix SB RIGHTSB 0.5] STROKE
		:.arc-hv-to  RIGHTSB [mix DESCENDER STROKE 0.5]
		:.arc-vh-to  [RIGHTSB - [STROKE - [mix DESCENDER STROKE 0.5]] * 1.1] DESCENDER
		:.line-to    [mix SB RIGHTSB 0.5] DESCENDER
		:.heads-to   LEFTWARD
}
create-glyph 'xi' : glyph-construction {
	assign-unicode 0x3BE
	include ifMarks
	include : HBar SB [RIGHTSB + O] [CAP - HALFSTROKE]
	
	local xbar : mix SB RIGHTSB 0.85
	local ybar : mix 0 CAP 0.55
	include : create-stroke
		:.start-from xbar [CAP - STROKE]
		:.set-width  0 STROKE
		:.arc-hv-to  [SB - O * 2 + STROKE * ITALICCOR] [mix [CAP - STROKE] ybar 0.6]
		:.arc-vh-to  xbar ybar
	include : create-stroke
		:.start-from xbar [ybar - STROKE]
		:.set-width  0 STROKE
		:.cubic-to   [mix SB RIGHTSB 0.3] [ybar - STROKE] [SB + STROKE * ITALICCOR] [mix 0 ybar 0.65] [SB + STROKE * ITALICCOR] [mix 0 ybar 0.45]
		:.arc-vh-to  [mix SB RIGHTSB 0.5] STROKE
		:.arc-hv-to  RIGHTSB [mix DESCENDER STROKE 0.5]
		:.arc-vh-to  [RIGHTSB - [STROKE - [mix DESCENDER STROKE 0.5]] * 1.1] DESCENDER
		:.line-to    [mix SB RIGHTSB 0.5] DESCENDER
		:.heads-to   LEFTWARD
}
create-glyph 'nu' : glyph-construction {
	assign-unicode 0x3BD
	include eMarks
	
	local x0 : mix MIDDLE SB 0.33
	local y0 : mix 0 XH 0.8
	local y1 : mix 0 XH 0.16
	local y2 0
	local xmid : MIDDLE + HALFSTROKE
	include : create-stroke
		:.start-from [SB + 0.4 * STROKE * ITALICCOR] XH
		:.set-width  0 STROKE
		:.cubic-to   x0 y0 xmid y1 xmid y2
		:.heads-to   DOWNWARD

	local turn : mix 0 XH 0.9
	include : create-stroke
		:.start-from RIGHTSB XH
		:.heads-to   DOWNWARD
		:.set-width  0 STROKE
		:.line-to    RIGHTSB turn
		:.heads-to   DOWNWARD
		:.curve-to   RIGHTSB [[1 - 0.27] * turn] xmid y2
}
create-glyph 'sigmafinal' : glyph-construction {
	assign-unicode 0x3C2
	include pMarks
	include : XSHookUpper XH [SB + O] MIDDLE RIGHTSB SMALLSMOOTHA SHOOK
	include : create-stroke
		:.start-from [SB + O + STROKE * ITALICCOR] [XH - SMALLSMOOTHA]
		:.set-width  0 STROKE
		:.line-to    [SB + O + STROKE * ITALICCOR] SMALLSMOOTHB
		:.arc-vh-to  [mix SB RIGHTSB 0.5] STROKE
		:.arc-hv-to  RIGHTSB [mix DESCENDER STROKE 0.5]
		:.arc-vh-to  [RIGHTSB - [STROKE - [mix DESCENDER STROKE 0.5]] * 1.1] DESCENDER
		:.line-to    [mix SB RIGHTSB 0.5] DESCENDER
		:.heads-to   LEFTWARD
}
create-glyph 'upsilon' : glyph-construction {
	assign-unicode 0x3C5
	include eMarks
	local x0 : [mix SB RIGHTSB 0.1] + STROKE
	local y0 : XH - STROKE * 0.2 + TAILADJY * globalTransform.yx
	local y1 : mix 0 XH 0.75
	local x1 : SB + STROKE * ITALICCOR + O
	local y3 : XH * 0.45
	include : create-stroke
		:.start-from [WIDTH - x0] y0
		:.set-width  STROKE 0
		:.curve-to   [WIDTH - x1] y1 [WIDTH - x1] [XH / 2]
		:.arc-vh-to  [mix [WIDTH - x1] [SB + STROKE] 0.5] [STROKE + O]
		:.arc-hv-to  [SB + STROKE] y3
		:.line-to    [SB + STROKE] XH
		:.heads-to   UPWARD
}
create-glyph 'pi' : glyph-construction {
	assign-unicode 0x3C0
	include eMarks
	include : HBar SB RIGHTSB [XH - HALFSTROKE]
	include : VBar [[mix SB RIGHTSB 0.1] + HALFSTROKE] 0 XH
	include : VBar [[mix RIGHTSB SB 0.1] - HALFSTROKE] 0 XH
}
create-glyph 'tau' : glyph-construction {
	assign-unicode 0x3C4
	include eMarks
	include : HBar SB RIGHTSB [XH - HALFSTROKE]
	include : VBar MIDDLE 0 XH
}
create-glyph 'rho' : glyph-construction {
	assign-unicode 0x3C1
	include pMarks
	include glyphs.o
	include : VBar [SB + HALFSTROKE * ITALICCOR + O] DESCENDER SMALLSMOOTHB
}
create-glyph 'sigma' : glyph-construction {
	assign-unicode 0x3C3
	include eMarks
	start-from [RIGHTSB + 0.25 * SB] XH
	line-to    [RIGHTSB + 0.25 * SB] [XH - STROKE]
	line-to    MIDDLE  [XH - STROKE - O]
	line-to    MIDDLE  [XH - O]
	include : create-stroke
		:.start-from MIDDLE [XH - STROKE - O]
		:.heads-to   LEFTWARD
		:.set-width  0 STROKE
		:.arc-hv-to  [SB + STROKE * ITALICCOR + O] [XH - SMALLSMOOTHA]
		:.line-to    [SB + STROKE * ITALICCOR + O] SMALLSMOOTHB
		:.arc-vh-to  MIDDLE [STROKE + O]
		:.heads-to   RIGHTWARD
		:.arc-hv-to  [RIGHTSB - STROKE * ITALICCOR + O] SMALLSMOOTHA
		:.line-to    [RIGHTSB - STROKE * ITALICCOR + O] [XH - SMALLSMOOTHB]
		:.arc-vh-to  MIDDLE [XH - STROKE - O]
		:.set-width  0 [STROKE * 0.5]
}
create-glyph 'omega' : glyph-construction {
	assign-unicode 0x3C9
	include eMarks
	local fine : adviceBlackness 3.5
	local x0 : [mix SB RIGHTSB 0.1] + fine
	local y0 : XH - STROKE * 0.2
	local y1 : mix 0 XH 0.75
	local x1 : SB + fine * ITALICCOR + O
	local y3 : XH / 2
	local y4 : XH * 0.65
	
	include : create-stroke
		:.start-from x0 y0
		:.set-width  0 fine
		:.curve-to   x1 y1 x1 [XH / 2]
		:.arc-vh-to  [mix x1 [MIDDLE - fine / 2] 0.5] [fine + O]
		:.arc-hv-to  [MIDDLE - fine / 2] y3
		:.line-to    [MIDDLE - fine / 2] y4
		:.heads-to   UPWARD
	
	include : create-stroke
		:.start-from [WIDTH - x0] [y0 + TAILADJY * globalTransform.yx]
		:.set-width  fine 0
		:.curve-to   [WIDTH - x1] y1 [WIDTH - x1] [XH / 2]
		:.arc-vh-to  [mix [WIDTH - x1] [MIDDLE + fine / 2] 0.5] [fine + O]
		:.arc-hv-to  [MIDDLE + fine / 2] y3
		:.line-to    [MIDDLE + fine / 2] y4
		:.heads-to   UPWARD
}

create-glyph 'phi' : glyph-construction {
	assign-unicode 0x3D5
	include ifMarks
	local fine : adviceBlackness 3.5
	local y1 0
	local y2 XH
	include : VBar MIDDLE DESCENDER [y1 + HALFSTROKE]
	include : smallo y2 y1 SB RIGHTSB fine
	include : VBar MIDDLE y1 y2 fine
	include : VBar MIDDLE [y2 - HALFSTROKE] CAP
}
create-glyph 'varphi' : glyph-construction {
	assign-unicode 0x3C6
	include pMarks
	local fine : adviceBlackness 3.5
	local x0 : [mix SB RIGHTSB 0.1] + fine
	local y0 : XH - STROKE * 0.2
	local y1 : mix 0 XH 0.75
	local x1 : SB + fine * ITALICCOR + O
	local y3 : XH / 2
	local y4 : XH * 0.65
	
	include : create-stroke
		:.start-from x0 y0
		:.set-width  0 fine
		:.curve-to   x1 y1 x1 [XH / 2]
		:.arc-vh-to  MIDDLE [fine + O]
		:.arc-hv-to  [WIDTH - x1] [XH / 2]
		:.arc-vh-to  [mix [WIDTH - x1] [MIDDLE + fine / 2] 0.5] [XH - fine - O]
		:.arc-hv-to  [MIDDLE + fine / 2] y3
		:.line-to    [MIDDLE + fine / 2] DESCENDER
}

create-glyph 'psi' : glyph-construction {
	assign-unicode 0x3C8
	include ifMarks
	local fine : adviceBlackness 3.5
	include : create-stroke
		:.start-from SB XH
		:.heads-to   DOWNWARD
		:.set-width  fine 0
		:.line-to    SB SMALLSMOOTHB
		:.arc-vh-to  MIDDLE O
		:.heads-to   RIGHTWARD
		:.arc-hv-to  RIGHTSB SMALLSMOOTHA
		:.line-to    RIGHTSB XH
		:.heads-to   UPWARD
	include : VBar MIDDLE 0 CAP fine
	include : VBar MIDDLE DESCENDER HALFSTROKE
}
create-glyph 'chi' : glyph-construction {
	set-width WIDTH
	assign-unicode 0x3C7
	include pMarks
	
	include : xStrand SB DESCENDER RIGHTSB XH 0.05 0.4 0.1
	include : xStrand SB XH RIGHTSB DESCENDER 0.05 0.4 0.1
}

# Variant letters

create-glyph 'pomega' : glyph-construction {
	assign-unicode 0x3D6
	include glyphs.omega AS_BASE
	include : HBar SB RIGHTSB [XH - HALFSTROKE]
}

### Polytonic symbols
define [GreekLRDoubleMark id unicode leftGlyph rightGlyph] : create-glyph id : glyph-construction {
	assign-unicode unicode
	local k : -WIDTH * 0.15
	
	include leftGlyph
	apply-transform : Translate [2 * k] 0
	include rightGlyph
	apply-transform : Translate [WIDTH - k] 0
	
	set-anchor 'above' MARK MIDDLE XH MIDDLE aboveMarkTop
}
GreekLRDoubleMark 'psilivaria' 0x1FCD glyphs.closeApostropheAbove glyphs.variaAbove
GreekLRDoubleMark 'psilioxia'  0x1FCE glyphs.closeApostropheAbove glyphs.oxiaAbove
GreekLRDoubleMark 'dasiavaria' 0x1FDD glyphs.invCommaAbove glyphs.variaAbove
GreekLRDoubleMark 'dasiaoxia'  0x1FDE glyphs.invCommaAbove glyphs.oxiaAbove

create-glyph 'psiliperispomeni' : glyph-construction {
	assign-unicode 0x1FCF
	include glyphs.closeApostropheAbove
	local yc : XH + ACCENT + DOTRADIUS * 0.25
	local radius : markHalfStroke * 2.25
	include : create-stroke
		:.start-from [markMiddle - radius] yc
		:.heads-to   UPWARD
		:.set-width  [markFine * 2] 0
		:.arc-vh-to  markMiddle [yc + radius]
		:.arc-hv-to  [markMiddle + radius] yc
		:.heads-to   DOWNWARD
	
	apply-transform : Translate WIDTH 0
	set-anchor 'above' MARK MIDDLE XH MIDDLE aboveMarkTop
}
create-glyph 'dasiaperispomeni' : glyph-construction {
	assign-unicode 0x1FDF
	include glyphs.invCommaAbove
	local yc : XH + ACCENT + DOTRADIUS * 0.25
	local radius : markHalfStroke * 2.25
	include : create-stroke
		:.start-from [markMiddle - radius] yc
		:.heads-to   UPWARD
		:.set-width  [markFine * 2] 0
		:.arc-vh-to  markMiddle [yc + radius]
		:.arc-hv-to  [markMiddle + radius] yc
		:.heads-to   DOWNWARD
	
	apply-transform : Translate WIDTH 0
	set-anchor 'above' MARK MIDDLE XH MIDDLE aboveMarkTop
}