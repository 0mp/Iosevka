###### Mathematical symbols

### Letter-like
alias 'micro' 0xB5 'mu'
create-glyph 'forall' : glyph-construction
	assign-unicode 0x2200
	include : LambdaShape OPERATORSTROKE
	include : HBar (SB + OPERATORSTROKE) (RIGHTSB - OPERATORSTROKE) (XH / 2) OPERATORSTROKE
	include : FlipAround MIDDLE (CAP / 2)

create-glyph 'exists' : glyph-construction
	assign-unicode 0x2203
	include : HBarTop (SB * 1.5 - O) RIGHTSB CAP OPERATORSTROKE
	include : HBarBottom (SB * 1.5 - O) RIGHTSB 0 OPERATORSTROKE
	include : HBar (SB * 1.5 - O) (RIGHTSB - HALFSTROKE) (CAP * 0.5) OPERATORSTROKE
	include : VBarLeft (SB * 1.5) 0 CAP OPERATORSTROKE
	include : FlipAround MIDDLE (CAP / 2)

create-glyph 'emptyset' : glyph-construction
	assign-unicode 0x2205
	include : smallo CAP 0 SB RIGHTSB OPERATORSTROKE
	
	local fine : OPERATORSTROKE / 2
	include : create-stroke
		:.start-from (SB + O + fine) [mix CAP 0 1.05]
		:.set-width  fine fine
		:.line-to    (RIGHTSB - O - fine) [mix 0 CAP 1.05]

create-glyph 'increment' : glyph-construction
	assign-unicode 0x2206
	include : LambdaShape OPERATORSTROKE
	include : HBarBottom (SB + (OPERATORSTROKE / 2)) (RIGHTSB - (OPERATORSTROKE / 2)) 0 OPERATORSTROKE

turned 'nabla' 0x2207 'increment' MIDDLE (CAP / 2)
create-glyph 'sum' : glyph-construction
	assign-unicode 0x2211
	include : SigmaShape parenTop parenBot OPERATORSTROKE

create-glyph 'product' : glyph-construction
	assign-unicode 0x220F
	include : PiShape parenTop parenBot 0 OPERATORSTROKE

turned 'coproduct' 0x2210 'product' MIDDLE parenMid
create-glyph 'infty' : glyph-construction
	assign-unicode 0x221E
	local s : (RIGHTSB - SB - O * 4) / CAP
	include [Miniature {'eight'} 5 s].eight
	apply-transform : Upright
	apply-transform : Translate (-MIDDLE) (-CAP / 2)
	apply-transform : Rotate (Math.PI / 2)
	apply-transform : Scale s
	apply-transform : Translate MIDDLE parenMid
	apply-transform : Italify

create-glyph 'propto' : glyph-construction
	assign-unicode 0x221D
	local s : (RIGHTSB - SB - O * 4) / CAP
	include [Miniature {'rotetedpropto'} 5 s].rotetedpropto
	apply-transform : Upright
	apply-transform : Translate (-MIDDLE) (-CAP / 2)
	apply-transform : Rotate (Math.PI / 2)
	apply-transform : Scale s
	apply-transform : Translate MIDDLE parenMid
	apply-transform : Italify

create-glyph 'partial' : glyph-construction
	assign-unicode 0x2202
	include bMarks
	include : smallo (CAP * 0.65) 0 SB RIGHTSB OPERATORSTROKE
	include : spiro
		widths.lhs OPERATORSTROKE
		flat (RIGHTSB - O) SMALLSMOOTHA
		curl (RIGHTSB - O) (XH - SMALLSMOOTHB)
		hookend CAPO 0.6
		g4   [mix SB RIGHTSB 0.075] [mix XH CAP 0.8]


### standard-sized operators
create-glyph 'minus' : glyph-construction
	set-width WIDTH
	assign-unicode 0x2212
	
	include : HBar SB RIGHTSB parenMid OPERATORSTROKE

create-glyph 'plusminus' : glyph-construction
	assign-unicode 0xB1
	set-width WIDTH
	include : HBarBottom SB RIGHTSB 0 OPERATORSTROKE
	include glyphs.plus

turned 'minusplus' 0x2213 'plusminus' MIDDLE parenMid
create-glyph 'multiply' : glyph-construction
	assign-unicode 0xD7
	local radius : (RIGHTSB - SB) / 2
	include : create-stroke
		:.start-from (MIDDLE - radius) (parenMid - radius)
		:.set-width  (OPERATORSTROKE / 2) (OPERATORSTROKE / 2)
		:.line-to    (MIDDLE + radius) (parenMid + radius)
	
	include : create-stroke
		:.start-from (MIDDLE + radius) (parenMid - radius)
		:.set-width  (OPERATORSTROKE / 2) (OPERATORSTROKE / 2)
		:.line-to    (MIDDLE - radius) (parenMid + radius)

create-glyph 'divide' : glyph-construction
	assign-unicode 0xF7
	include glyphs.minus
	local radius : (RIGHTSB - SB) / 2
	include : list
		Ring (parenMid + radius + DOTRADIUS) (parenMid + radius - DOTRADIUS) (MIDDLE - DOTRADIUS + O) (MIDDLE + DOTRADIUS - O) true
		Ring (parenMid - radius + DOTRADIUS) (parenMid - radius - DOTRADIUS) (MIDDLE - DOTRADIUS + O) (MIDDLE + DOTRADIUS - O) true

create-glyph 'negate' : glyph-construction
	assign-unicode 0xAC
	
	include glyphs.minus
	
	include : VBarRight RIGHTSB (parenMid - (RIGHTSB - SB) * 0.55) parenMid OPERATORSTROKE

local operTop : mix parenMid parenTop 0.8
local operBot : mix parenMid parenBot 0.8
create-glyph 'vee' : glyph-construction
	assign-unicode 0x2228
	
	include : create-stroke
		:.start-from SB operTop
		:.set-width  (OPERATORSTROKE / 2) (OPERATORSTROKE / 2)
		:.line-to    MIDDLE operBot
		:.heads-to   DOWNWARD
		:.set-samples 1
	
	include : create-stroke
		:.start-from RIGHTSB operTop
		:.set-width  (OPERATORSTROKE / 2) (OPERATORSTROKE / 2)
		:.line-to    MIDDLE operBot
		:.heads-to   DOWNWARD
		:.set-samples 1

create-glyph 'Vee' : glyph-construction
	assign-unicode 0x22C1
	
	include : create-stroke
		:.start-from SB parenTop
		:.set-width  (OPERATORSTROKE / 2) (OPERATORSTROKE / 2)
		:.line-to    MIDDLE parenBot
		:.heads-to   DOWNWARD
		:.set-samples 1
	
	include : create-stroke
		:.start-from RIGHTSB parenTop
		:.set-width  (OPERATORSTROKE / 2) (OPERATORSTROKE / 2)
		:.line-to    MIDDLE parenBot
		:.heads-to   DOWNWARD
		:.set-samples 1

turned 'wedge' 0x2227 'vee' MIDDLE parenMid
turned 'Wedge' 0x22C0 'Vee' MIDDLE parenMid
create-glyph 'cup' : glyph-construction
	assign-unicode 0x222A
	include : UShape operTop operBot OPERATORSTROKE

create-glyph 'Cup' : glyph-construction
	assign-unicode 0x22C3
	include : UShape parenTop parenBot OPERATORSTROKE

turned 'cap' 0x2229 'cup' MIDDLE parenMid
turned 'Cap' 0x22C2 'Cup' MIDDLE parenMid

create-glyph 'lesseq' : glyph-construction
	assign-unicode 0x2264
	local fine : adviceBlackness 4
	local top : [mix parenMid parenTop 0.5] - fine
	local bot : [mix parenMid parenBot 0.5] + fine
	
	include : create-stroke
		:.start-from  RIGHTSB (top + fine)
		:.set-width   (OPERATORSTROKE / 2) (OPERATORSTROKE / 2)
		:.line-to     SB ([mix top bot 0.5] + fine)
		:.heads-to    LEFTWARD
		:.set-samples 1
	include : create-stroke
		:.start-from  SB ([mix top bot 0.5] + fine)
		:.set-width   (OPERATORSTROKE / 2) (OPERATORSTROKE / 2)
		:.heads-to    RIGHTWARD
		:.line-to     RIGHTSB (bot + fine)
		:.set-samples 1
	include : create-stroke
		:.start-from  SB ([mix top bot 0.5] - fine)
		:.set-width   (OPERATORSTROKE / 2) (OPERATORSTROKE / 2)
		:.heads-to    RIGHTWARD
		:.line-to     RIGHTSB (bot - fine)
		:.set-samples 1

create-glyph 'greatereq' : glyph-construction
	assign-unicode 0x2265
	local fine : adviceBlackness 4
	local top : [mix parenMid parenTop 0.5] - fine
	local bot : [mix parenMid parenBot 0.5] + fine
	
	include : create-stroke
		:.start-from  SB (top + fine)
		:.set-width   (OPERATORSTROKE / 2) (OPERATORSTROKE / 2)
		:.line-to     RIGHTSB ([mix top bot 0.5] + fine)
		:.heads-to    RIGHTWARD
		:.set-samples 1
	include : create-stroke
		:.start-from  RIGHTSB ([mix top bot 0.5] + fine)
		:.set-width   (OPERATORSTROKE / 2) (OPERATORSTROKE / 2)
		:.heads-to    LEFTWARD
		:.line-to     SB (bot + fine)
		:.set-samples 1
	include : create-stroke
		:.start-from  RIGHTSB ([mix top bot 0.5] - fine)
		:.set-width   (OPERATORSTROKE / 2) (OPERATORSTROKE / 2)
		:.heads-to    LEFTWARD
		:.line-to     SB (bot - fine)
		:.set-samples 1

create-glyph 'subst' : glyph-construction
	assign-unicode 0x2282
	local top : mix parenMid parenTop 0.5
	local bot : mix parenMid parenBot 0.5
	include : create-stroke
		:.start-from RIGHTSB top
		:.heads-to   LEFTWARD
		:.set-width  OPERATORSTROKE 0
		:.line-to    (SB + (top - bot) / 2) top
		:.arc-hv-to  SB parenMid
		:.arc-vh-to  (SB + (top - bot) / 2) bot
		:.line-to    RIGHTSB bot
		:.heads-to   RIGHTWARD

create-glyph 'element' : glyph-construction
	assign-unicode 0x2208
	include glyphs.subst
	include : HBar (SB + HALFSTROKE) RIGHTSB parenMid OPERATORSTROKE

turned nothing 0x2283 'subst' MIDDLE parenMid
turned nothing 0x220B 'element' MIDDLE parenMid

create-glyph 'sym' : glyph-construction
	assign-unicode 0x223C
	local wavex : (MIDDLE - SB) * 0.3
	local wavey : (operTop - parenMid) * 0.15
	local endwavey : wavey + 0
	local fine OPERATORSTROKE
	
	include : create-stroke
		:.start-from SB (parenMid - endwavey)
		:.set-width  (fine / 2) (fine / 2)
		:.cubic-to   (SB + wavex) (parenMid + wavey) (MIDDLE - wavex) (parenMid + wavey) MIDDLE parenMid
		:.cubic-to   (MIDDLE + wavex) (parenMid - wavey) (RIGHTSB - wavex) (parenMid - wavey) RIGHTSB (parenMid + endwavey)

create-glyph 'ident' : glyph-construction
	assign-unicode 0x2261
	include : HBar SB RIGHTSB (parenMid + equalHalfSpace * 1.5) OPERATORSTROKE
	include : HBar SB RIGHTSB parenMid OPERATORSTROKE
	include : HBar SB RIGHTSB (parenMid - equalHalfSpace * 1.5) OPERATORSTROKE

vdual 'approx' 0x2248 'sym' (equalHalfSpace * 1.75)

define [notGlyph newid unicode oldid top bot prop shift] : create-glyph [fallback newid : 'not' + oldid] : glyph-construction
	assign-unicode unicode
	include glyphs.(oldid)
	
	local fine : OPERATORSTROKE / 2
	include : create-stroke
		:.start-from ([fallback shift 0] + [mix SB RIGHTSB [fallback prop 0.25]]) [fallback bot operBot]
		:.set-width  fine fine
		:.line-to    ([fallback shift 0] + [mix RIGHTSB SB [fallback prop 0.25]]) [fallback top operTop]

define [notGlyph.right newid unicode oldid top bot prop shift] : notGlyph newid unicode oldid top bot prop (-OPERATORSTROKE * 0.5)
define [notGlyph.left newid unicode oldid top bot prop shift] : notGlyph newid unicode oldid top bot prop (OPERATORSTROKE * 0.5)
notGlyph 'noteq' 0x2260 'equal'
notGlyph 'notident' 0x2262 'ident'
notGlyph.left 'notless' 0x226E 'less'
notGlyph.right 'notgreater' 0x226F 'greater'
notGlyph 'notapprox' 0x2249 'approx' [mix parenMid operTop 0.75] [mix parenMid operBot 0.75]
notGlyph 'notsym' 0x2241 'sym' [mix parenMid operTop 0.75] [mix parenMid operBot 0.75]
notGlyph.left 'notsubst' 0x2284 'subst'
notGlyph.right 'notturnsubst' 0x2285 'turnsubst'
notGlyph.left 'notelement' 0x2209 'element'
notGlyph.right 'notturnelement' 0x220C 'turnelement'
notGlyph.left 'notlesseq' 0x2270 'lesseq'
notGlyph.right 'notgreatereq' 0x2271 'greatereq'
notGlyph.right 'nonexist' 0x2204 'exists' (CAP - DESCENDER / 2) (DESCENDER / 2) 0.4

### Others

alias 'mathbullet' 0x2219 'bullet'
create-glyph 'sqrt' : glyph-construction
	assign-unicode 0x221A
	
	include : create-stroke
		:.start-from SB [mix parenBot parenTop 0.45]
		:.set-width  (OPERATORSTROKE / 2) (OPERATORSTROKE / 2)
		:.line-to    MIDDLE parenBot
		:.heads-to   DOWNWARD
		:.set-samples    1
	
	include : create-stroke
		:.start-from WIDTH parenTop
		:.set-width  (OPERATORSTROKE / 2) (OPERATORSTROKE / 2)
		:.line-to    MIDDLE parenBot
		:.heads-to   DOWNWARD
		:.set-samples    1


create-glyph 'integrate' : glyph-construction
	assign-unicode 0x222B
	include : LongSShape parenTop parenBot HOOK (HOOK * 0.75) OPERATORSTROKE

dual 'doubleintegrate' 0x222C 'integrate' (0.5 * WIDTH)

create-glyph 'ringintegrate' : glyph-construction
	assign-unicode 0x222E
	include glyphs.integrate
	include : smallo (parenMid + (RIGHTSB - SB) / 2) (parenMid - (RIGHTSB - SB) / 2) SB RIGHTSB OPERATORSTROKE