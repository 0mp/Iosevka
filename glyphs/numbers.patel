
### NUMBERS

create-glyph 'zero.slashed' : glyph-construction {
	set-width WIDTH
	
	put-shapes glyphs.O.contours
	
	local bar : create-stroke :.start-from [SB + STROKE / 2] [CAP * [1 - 0.65]] :.line-to [RIGHTSB - STROKE / 2] [CAP * 0.65]
	put-shapes : bar.to-outline [STROKE / 2] [STROKE / 2]
}
create-glyph 'zero.unslashed' : glyph-construction {
	include glyphs.O
}
create-glyph 'zero.dotted' : glyph-construction {
	include glyphs.O
	put-shapes : list {
		Ring [CAPMIDDLE + DOTRADIUS] [CAPMIDDLE - DOTRADIUS] [MIDDLE + DOTRADIUS] [MIDDLE - DOTRADIUS]
	}
}
create-glyph 'zero' : glyph-construction {
	set-width WIDTH
	assign-unicode '0'
	include glyphs.[match variantSelector.zero {
		'slashed'   'zero.slashed'
		'dotted'    'zero.dotted'
		'unslahsed' 'zero.unslashed'
		otherwise   'zero.slashed'
	}]
}

create-glyph 'one' : glyph-construction {
	set-width WIDTH
	assign-unicode '1'
	
	put-shapes : create-stroke
		:.start-from [MIDDLE + JBALANCE * 0.6] 0
		:.set-width  HALFSTROKE HALFSTROKE
		:.heads-to   UPWARD
		:.line-to    [MIDDLE + JBALANCE * 0.6] CAP
		:.heads-to   UPWARD
		:.to-outline
	put-shapes : create-stroke
		:.start-from [MIDDLE - HALFSTROKE + JBALANCE * 0.6] CAP
		:.set-width STROKE 0
		:.line-to [MIDDLE - HOOK * 1.5 + JBALANCE * 0.5] [CAP - HOOK * 0.75]
		:.to-outline
}

create-glyph 'two' : glyph-construction {
	set-width WIDTH
	assign-unicode '2'
	include capitalMarks
	
	
	local ssmootha SMOOTHA

	put-shapes : create-stroke
		:.start-from [SB + OXHOOK] [CAP - HOOK]
		:.set-width 0 STROKE
		:.curve-to [MIDDLE - KAPPA_HOOK * [MIDDLE - SB]] CAPO MIDDLE CAPO
		:.heads-to RIGHTWARD
		:.arc-hv-to RIGHTSB [CAP - ssmootha]
		:.to-outline
	
	put-shapes : sStrand STROKE [CAP - ssmootha]
		
	put-shapes : create-stroke
		:.start-from SB 0
		:.set-width  STROKE 0
		:.heads-to   RIGHTWARD
		:.line-to    RIGHTSB 0
		:.heads-to   RIGHTWARD
		:.to-outline
}